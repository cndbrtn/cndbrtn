{"version":3,"sources":["utils/actions.js","utils/GlobalState.js","components/Container.js","components/RecentArt.js","utils/API.js","components/Login.js","components/Signup.js","components/ArtWork.js","components/Post.js","components/NewPost.js","components/Blog.js","components/Upload.js","components/Tags.js","components/Gallery.js","components/SinglePost.js","components/FilteredArt.js","components/UpdateArt.js","components/UpdateBlog.js","components/NewProfile.js","App.js","serviceWorker.js","index.js"],"names":["UserContext","createContext","Provider","reducer","state","action","type","_id","username","postId","postImg","postTitle","postDesc","postTags","password","initialState","journal","works","favorites","uploaded","UserProvider","value","props","useReducer","dispatch","useUserContext","useContext","Container","className","children","loggedIn","RecentArt","mapTags","map","post","tags","filter","tag","i","length","push","res","filteredPosts","img","key","to","title","description","src","alt","axios","get","newUser","email","newPf","put","login","newArt","id","update","delete","newPost","granimColor","gradients","transitionSpeed","granimImg","source","blendingMode","Login","console","log","useState","setState","art","setArt","useEffect","API","then","data","nameRef","useRef","passRef","handleChange","current","handleLogin","e","preventDefault","user","window","location","assign","catch","err","name","placeholder","onChange","ref","onClick","isPausedWhenNotInView","image","states","Signup","signUp","setSignUp","emailRef","ArtWork","match","params","Posts","pathname","body","handleDelete","icon","NewPost","postState","setPostState","titleRef","bodyRef","tagsRef","split","trim","replace","htmlFor","userId","Blog","url","toString","Post","Upload","message","file","fileUrl","fileState","setFileState","postBody","artState","setArtState","imgRef","host","protocol","handlePost","prettyTags","accept","files","URL","createObjectURL","target","contentType","generatePutUrl","options","Key","Date","now","ContentType","headers","config","generateGetUrl","width","Tags","Gallery","pfp","nickname","bio","twitter","worksState","setWorksState","pathId","handleLogOut","height","href","SinglePost","history","back","FilteredArt","posts","UpdateArt","setUpdate","defaultValue","UpdateBlog","setPost","NewProfile","bioState","setBioState","twitRef","bioRef","nickRef","library","add","fab","faTrash","faPencilAlt","App","isLoggedIn","setIsLoggedIn","exact","path","component","Boolean","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.7b5934be.chunk.js","sourcesContent":["export const ADD_JOURNAL_POST = 'ADD_JOURNAL_POST';\nexport const UPDATE_JOURNAL = 'UPDATE_JOURNAL';\nexport const REMOVE_JOURNAL_POST = 'REMOVE_JOURNAL_POST';\nexport const SET_CURRENT_POST = 'SET_CURRENT_POST';\n // artwork actions\nexport const ADD_ARTWORK = 'ADD_ARTWORK';\nexport const UPDATE_ARTWORK = 'UPDATE_ARTWORK';\nexport const REMOVE_ARTWORK = 'REMOVE_ARTWORK';\nexport const SET_CURRENT_ARTWORK = 'SET_CURRENT_ARTWORK';\n // user actions\nexport const LOGIN_USER = 'LOGIN_USER';\nexport const ADD_USER = 'ADD_USER';\nexport const UPDATE_USER = 'UPDATE_USER';\nexport const REMOVE_USER = 'REMOVE_USER';\nexport const SET_CURRENT_USER = 'SET_CURRENT_USER';\nexport const GET_CURRENT_USER = 'GET_CURRENT_USER';\n // favoriting actions\nexport const ADD_FAVE = 'ADD_FAVE';\nexport const REMOVE_FAVE = 'REMOVE_FAVE';\nexport const UPDATE_CURRENT_FAVE = 'UPDATE_CURRENT_FAVE';\n\nexport const GALLERY_PROPS = 'GALLERY_PROPS';\nexport const POST_PROPS = 'POST_PROPS'\n\n","import React, { createContext, useReducer, useContext } from 'react';\n\nimport { SET_CURRENT_USER, LOGIN_USER, ADD_USER, GALLERY_PROPS } from './actions';\n\nconst UserContext = createContext();\nconst { Provider } = UserContext;\n\nconst reducer = (state, action) => {\n    // console.log('action object', action.type) // console logs the action object with all the info I need to store\n    // const { type, _id, username, nickname, journal, works, favorites, password } = action;\n    switch (action.type) {\n        case SET_CURRENT_USER:\n            // console.log('action inside SET CURRENT', action);\n            return {\n                ...state,\n                type: action.type,\n                _id: action._id,\n                username: action.username,\n                postId: action.postId,\n                postImg: action.postImg,\n                postTitle: action.postTitle,\n                postDesc: action.postDesc,\n                postTags: action.postTags,\n                password: '',\n\n            }\n        case LOGIN_USER:\n            return {\n                ...action\n            };\n        case ADD_USER: \n            return {\n                ...action\n            };\n        case GALLERY_PROPS:\n            return {\n                ...state,\n                ...action            }\n        default:\n            return state;\n    }\n};\n\nlet initialState = {\n    type: '',\n    _id: '0',\n    username: '',\n    journal: [],\n    works: [],\n    favorites: [],\n    password: '',\n    uploaded: false,\n    postId: '',\n    postImg: '',\n    postTitle: '',\n    postDesc: '',\n    postTags: []\n    // loggedIn: false\n};\n\nconst UserProvider = ({ value = [], ...props }) => {\n    const [state, dispatch] = useReducer(reducer, initialState);\n    // console.log('UserProvider props', props);\n    return <Provider value={[state, dispatch]} {...props} />\n};\n\nconst useUserContext = () => {\n    return useContext(UserContext);\n};\n\nexport { UserProvider, useUserContext };","import React from 'react';\n\n\nconst Container = (props) => {\n    // console.log('props.children', props.children)\n    return (\n        <div className=\"router-container\">\n            {props.children} {props.loggedIn}\n        </div>\n    )\n};\n\nexport default Container;\n\n","import React from 'react'\nimport { Link } from 'react-router-dom';\n\nconst RecentArt = props => {\n    const mapTags = props.works.works.map(post => {\n        return post.tags\n    })\n\n    const tags = []\n    mapTags.filter(tag => {\n        for (let i = 0; i < tag.length; i++) {\n            if (tag[i] === \"nsfw\") {\n                tags.push(tag)\n            }\n        }\n    })\n    // console.log('filtered tags', tags)\n    const posts = props.works.works.filter(post => {\n        // console.log('post in posts filter', post)\n        for (let res of tags) {\n            if (post.tags === res) {\n                return post\n            }\n        }\n    })\n    // console.log('filtered posts in recentart', posts.img)\n    // console.log('props in RecentArt.js', props);\n\n    const filteredPosts= []\n    const nsfwFilter = props.works.works.filter(post => {\n        // console.log('post inside nsfwFilter', post)\n        for (let res of tags) {\n            if (post.tags === res && !props.loggedIn) {\n                post.img = '/images/r18-warning.jpg'\n                filteredPosts.push(post)\n            }\n        }\n        return post\n    })\n    // console.log('nsfwFilter', nsfwFilter)\n    return (\n        <div className=\"recent-art\">\n            <h1>Recently uploaded art:</h1>\n            <div className=\"recent-box\">\n            {props.works.works.map(post => (\n                 <div className=\"post\" key={post._id}>\n                    <div className=\"gall-thumb\">\n                        <Link to={{\n                            // pathname: `${post.user.username}/gallery/work/${post._id}`,\n                            state: {\n                                postId: post._id,\n                                postTitle: post.title,\n                                postImg: post.img,\n                                postDesc: post.description,\n                                postTags: post.tags\n                            }\n                        }}><img src={post.img} alt={post._id} /></Link>\n                    </div>       \n                    <div>\n                        <h2>{post.title}</h2>\n                    </div>\n                 </div>\n            ))}\n            </div>\n        </div>\n        )\n}\n\nexport default RecentArt;","import axios from 'axios';\n\nexport default {\n    getUser: function (username) {\n        return axios.get('/api/user/' + username)\n    },\n    registerUser: function (newUser) {\n        return axios.post('/api/user', {\n            username: newUser.username,\n            password: newUser.password,\n            email: newUser.email\n        })\n    },\n    updateUser: (newPf) => {\n        return axios.put('/api/user/' + newPf._id, {\n            ...newPf\n        })\n    },\n    login: function (login) {\n        return axios.post('/api/user/login', {\n            username: login.username,\n            password: login.password\n        })\n    },\n    logout: function () {\n        return axios.post(\"/api/user/logout\");\n    },\n    status: function () {\n        return axios.get('/api/user');\n    },\n    recentArt: () => {\n        return axios.get('/api/artwork');\n    },\n    postArt: (newArt) => {\n        return axios.post('/api/artwork', newArt);\n    },\n    getArt: (username) => {\n        return axios.get('/api/artwork/' + username)\n    },\n    updateArt: (id, update) => {\n        return axios.put('/api/artwork/' + id, {\n            ...update\n        })\n    },\n    deleteArt: (id) => {\n        return axios.delete('/api/artwork/' + id)\n    },\n    postJournal: (newPost) => {\n        return axios.post('/api/blog', newPost);\n    },\n    getJournal: (username) => {\n        return axios.get('/api/blog/' + username)\n    },\n    updateJournal: (id, update) => {\n        return axios.put('/api/blog/' + id, {\n            ...update\n        })\n    },\n    deleteJournal: (id) => {\n        return axios.delete('/api/blog/' + id)\n    }\n}","import React, { useRef, useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport RecentArt from './RecentArt'\nimport API from '../utils/API'\nimport Granim from 'react-granim';\n\n\n// initialize granim\nconst granimColor = ({   \"default-state\": {\n    gradients: [\n        ['#00a84c', '#b3ff00'],\n        ['#00ffff', '#556270'],\n        ['#ff0062', '#7ea0c4'],\n        ['#6200ff', '#fd0000']\n    ],\n    transitionSpeed: 7000}});\n\n// set granim image\nconst granimImg = ({ source: '../images/bg.jpeg', blendingMode: 'multiply' });\n\n// login component\nconst Login = props => {\n\n    console.log('props in login', props);\n    // setting up our state\n    const [state, setState] = useState({\n        username: '',\n        password: ''\n    });\n\n    const [art, setArt] = useState({\n        works: []\n    });\n\n    useEffect(() => {\n        API.recentArt()\n        .then(works => {\n            // console.log('response', works.data)\n            setArt({\n                works: works.data\n            })\n        })\n    }, [props.loggedIn])\n\n    console.log('art', art)\n\n    // our element references\n    const nameRef = useRef();\n    const passRef = useRef();\n\n    // handle input change function\n    const handleChange = () => {\n        // variables to dispatch\n        const username = nameRef.current.value;\n        const password = passRef.current.value;\n        // const type = LOGIN_USER;\n\n        // dispatch to our global state\n        setState({\n            // ...state,\n            // type,\n            username,\n            password\n        })\n    };\n\n    // posts user data to the api to validate against the database\n    const handleLogin = (e) => {\n        e.preventDefault();\n        const login = {\n            username: state.username,\n            password: state.password\n        }\n        console.log('components/Login.js login', login)\n        API.login(login)\n            .then((user) => {\n                console.log('Login.js api.login() result', user.data.username);\n                window.location.assign(`/${user.data.username}/gallery`);\n            }).catch(err => console.log(err));\n    };\n\n    if (!art) {\n        return (\n            <div className=\"login-page\">\n                <div className=\"container login\">\n                    <div>\n                        <h1><span>X</span>folio:</h1>\n                        {props.loggedIn ?\n                            (<div>\n                                <h1>Welcome back {props.username}!</h1>\n                                <p><Link to={`${props.username}/gallery`}>Your Gallery</Link></p>\n                                <p><Link to={`${props.username}/blog`}>Your Blog</Link></p>\n                            </div>):\n                            (<form>\n                                <div>\n                                    <input type = \"text\" name = \"username\" placeholder = \"Username\" onChange = { handleChange } ref = { nameRef } />\n                                </div>\n                                <div>\n                                    <input type=\"password\" name=\"password\" placeholder=\"password\" onChange={handleChange} ref={passRef} />\n                                </div>\n                                <Link to=\"/Signup\"><p>New to Xfolio? Sign up here</p></Link>\n                                <div>\n                                    <button name=\"login\" onClick={handleLogin}>sign in</button>\n                                </div>\n                            </form>)\n                        }  \n                    </div>\n                </div>\n            {/* <RecentArt works={art} /> */}\n              <Granim isPausedWhenNotInView =\"true\" image= {granimImg} states = {granimColor} id=\"canvas-image\" />\n            </div>\n        )\n    } else {\n        return (\n            <div className=\"login-page\">\n                <div className=\"container login\">\n                    <div>\n                        <h1><span>X</span>folio:</h1>\n                        {props.loggedIn ?\n                            (<div>\n                                <h1>Welcome back {props.username}!</h1>\n                                <p><Link to={`${props.username}/gallery`}>Your Gallery</Link></p>\n                                <p><Link to={`${props.username}/blog`}>Your Blog</Link></p>\n                            </div>) :\n                            (<form>\n                                <div>\n                                    <input type=\"text\" name=\"username\" placeholder=\"username\" onChange={handleChange} ref={nameRef} />\n                                </div>\n                                <div>\n                                    <input type=\"password\" name=\"password\" placeholder=\"password\" onChange={handleChange} ref={passRef} />\n                                </div>\n                                <Link to=\"/Signup\"><p>New to Xfolio? Sign up here</p></Link>\n                                <div>\n                                    <button name=\"login\" onClick={handleLogin}>sign in</button>\n                                </div>\n                            </form>)\n                        } \n                    </div>\n                </div>\n                <RecentArt works={art} loggedIn={props.loggedIn} />\n                <Granim isPausedWhenNotInView=\"true\" image={granimImg} states={granimColor} id=\"canvas-image\" />\n            </div>\n        )\n    }\n}\n\nexport default Login;","import React, { useRef, useState } from 'react';\nimport { useUserContext } from '../utils/GlobalState'\nimport API from '../utils/API'\nimport { SET_CURRENT_USER } from '../utils/actions';\nimport Granim from 'react-granim';\nimport { Link } from 'react-router-dom';\n\n\nconst granimColor = ({   \"default-state\": {\n    gradients: [\n        ['#e5ff00', '#ff5100'],\n        ['#00ffff', '#556270'],\n        ['#ff0062', '#7ea0c4'],\n        ['#6200ff', '#fd0000']\n    ],\n    transitionSpeed: 7000}});\n    \nconst granimImg = ({source: '../images/bg.jpeg', blendingMode: 'multiply'});\n\n\nconst Signup = () => {\n    const [state, dispatch] = useUserContext();\n    const [signUp, setSignUp] = useState({});\n\n    const emailRef = useRef();\n    const nameRef = useRef();\n    const passRef = useRef();\n\n    const handleChange = () => {\n        const email = emailRef.current.value;\n        const username = nameRef.current.value;\n        const password = passRef.current.value;\n\n        setSignUp({\n            username: username,\n            password: password,\n            email: email\n        })\n    }\n\n    const handleSignup = (e) => {\n        e.preventDefault();\n        const newUser = {\n            email: signUp.email,\n            username: signUp.username,\n            password: signUp.password\n        }\n        // console.log('components/Signup.js sign up', newUser)\n        API.registerUser(newUser)\n            .then(() => {\n                API.login({ username: signUp.username, password: signUp.password })\n                window.location.assign(`${signUp.username}/setup`)\n            })\n        }\n\n    return (\n        <div className=\"signup-page\">\n            <div className=\"container login signup\">\n                <div>\n                    <form>\n                        <h1>Welcome to <span>X</span>folio!</h1>\n                        <div>\n                            <input type=\"text\" name=\"email\" placeholder=\"email\" onChange={handleChange} ref={emailRef} />\n                    </div>\n                        <div>\n                            <input type=\"text\" name=\"username\" placeholder=\"username\" onChange={handleChange} ref={nameRef} />\n                    </div>\n                    <div>\n                        <input type=\"password\" name=\"password\" placeholder=\"password\" onChange={handleChange} ref={passRef} />\n                        </div>\n                <Link to=\"/Login\"><p>Already have an account? Log in here</p></Link>\n                        <div>\n                            <button name=\"signup\" onClick={handleSignup}>sign up</button>\n                            <br />\n                        </div>\n                    </form>\n                </div>\n            </div>\n          <Granim isPausedWhenNotInView =\"true\" image= {granimImg} states = {granimColor} id=\"canvas-image\" />\n       </div>\n    )\n}\n\nexport default Signup;","import React, { useEffect, useState } from 'react';\nimport API from '../utils/API';\nimport { Link } from 'react-router-dom';\nconst ArtWork = props => {\n    // console.log('props.match', props)\n\n    const art = props.location.state\n\n    // console.log('state from props', art)\n\n    // console.log('art state in detail', art)\n    return (\n        <div className=\"detail\">\n            {art ? (\n                <div className=\"detail-box\">\n                    <div className=\"full-info\">\n                    <div><h1>{art.postTitle}</h1></div>\n                    <div>{art.postDesc}</div>\n                    <div className=\"tags\"><p>Tagged: {art.postTags.map(tag => (\n                        <span key={tag}>{tag} </span>\n                        ))}\n                        </p>\n                        </div>\n                        <p><Link to={'../../../' + props.match.params.username + '/gallery'}>Back to gallery</Link></p>\n                        <p><Link to={''}>Home</Link></p>\n                    </div>\n                <div className=\"full-image\">\n                    <img className=\"full-image\" src={art.postImg} alt={art.postTitle} />\n                </div>\n                </div>\n                    \n                    \n        ) : (<h3>Loading...</h3>)}\n        </div >\n    )\n}\n\nexport default ArtWork;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { useUserContext } from '../utils/GlobalState';\nimport API from '../utils/API';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nconst Posts = props => {\n    const [state, setState] = useUserContext();\n    // console.log('props in Post', props)\n    // const url = window.location.toString().split('/');\n    const handleDelete = id => {\n        API.deleteJournal(id)\n        setState({\n            ...state,\n            uploaded: true\n        })\n    }\n\n    const { journal } = state;\n    if (!journal.length) {\n        return (\n            <div>\n                <h3>You don't have any posts yet</h3>\n            </div>\n        )\n    } else {\n        return (\n            <div>\n                {journal.map(post => (\n                    <div key={post._id} className='postbox'>\n                        <Link to={{\n                            pathname: 'blog/' + post._id,\n                            state: {\n                                ...post\n                            }\n                        }}>\n                        <h2>{post.title}</h2>\n                        </Link>\n                        <div>\n                            {post.body}\n                        </div>\n                        <div className=\"tags\">\n                            {post.tags}\n                        </div>\n                        {props.loggedIn ? (\n                        <div>\n                            <button className=\"del-butt\" onClick={() => handleDelete(post._id)}><FontAwesomeIcon icon=\"trash\" /></button>\n                            <button className=\"edit-butt\">\n                                <Link to={{\n                                    pathname: `blog/update/${post._id}`,\n                                    state: {\n                                        ...post,\n                                        user: props._id\n                                    }\n                                }}><FontAwesomeIcon icon=\"pencil-alt\" /></Link>\n                                </button>\n                                </div>) :\n                    (<span></span>)}\n                        </div>\n                ))}\n            </div>\n        )\n    }\n}\n\nexport default Posts;","import React, { useRef, useState } from 'react';\nimport { useUserContext } from '../utils/GlobalState';\nimport API from '../utils/API';\nimport { GALLERY_PROPS } from '../utils/actions';\n\nconst NewPost = () => {\n    const [state, dispatch] = useUserContext();\n    const [postState, setPostState] = useState();\n\n    const titleRef = useRef();\n    const bodyRef = useRef();\n    const tagsRef = useRef();\n\n    const handleChange = e => {\n        e.preventDefault();\n        \n        const title = titleRef.current.value;\n        const body = bodyRef.current.value;\n        const tags = tagsRef.current.value.split(',');\n        const tag = tags.map(tag => {\n            const trimTag = tag.trim();\n            const regex = /\\s+/g;\n            const underscoreTag = trimTag.replace(regex, '_')\n            return underscoreTag;\n        })\n        \n        console.log({ title: title, body: body, tags: [tag] })\n        setPostState({\n            title,\n            body,\n            tags: tag\n        })\n    };\n\n    const handleSubmit = e => {\n        e.preventDefault();\n\n        const { title, body, tags } = postState;\n        const { _id } = state;\n        const newPost = {\n            userId: _id,\n            title,\n            body,\n            tags\n        };\n\n        API.postJournal(newPost)\n            // .then(post => {\n                // console.log('new post in NewPost.js result', post)\n                dispatch({\n                    ...state,\n                    type: GALLERY_PROPS,\n                    uploaded: true,\n                    // journal: post.data.journal\n                }\n               )\n        //    })\n    }\n\n    console.log('postState', postState);\n\n    return (\n        <div className=\"blog-upload\">\n            <h2>Make a post:</h2>\n            <form onChange={handleChange}>\n                <div>\n                <label htmlFor=\"title\">Title:</label><br />\n                    <input type=\"text\" name=\"title\" ref={titleRef} />\n                </div>\n                <div>\n                <label htmlFor=\"body\">Post:</label><br />\n                    <textarea name=\"body\" ref={bodyRef} />\n                </div>\n                <div>\n                <label htmlFor=\"tags\">Tags, separated by a comma:</label><br />\n                    <input type=\"text\" name=\"tags\" ref={tagsRef} />\n                </div>\n                <div>\n                    <button name=\"submit\" onClick={handleSubmit}>Submit Post</button>\n                </div>\n            </form>\n        </div>\n    )\n}\n\nexport default NewPost;","import React, { useEffect } from 'react';\nimport { useUserContext } from '../utils/GlobalState';\nimport { Link } from 'react-router-dom';\nimport Posts from './Post';\nimport NewPost from './NewPost';\nimport { GALLERY_PROPS } from '../utils/actions';\nimport API from '../utils/API'\n\nconst Blog = (props) => {\n    const [state, dispatch] = useUserContext();\n    // console.log('props in blog', props)\n    // console.log('window history', window.history)\n    \n    const url = window.location.toString().split('/');\n    // console.log('url', url[3])\n    \n    useEffect(() => {\n        API.getJournal(url[3])\n           .then(res => {\n                // console.log('no props res', res.data)\n                dispatch({\n                    ...state,\n                    _id: res.data._id,\n                    type: GALLERY_PROPS,\n                    journal: res.data.journal,\n                    uploaded: false\n                })\n           })\n           .catch(err => console.log('err', err))\n        }, [state.uploaded]);\n    \n    // console.log('state', state);\n    \n    const handleLogOut = () => {\n        API.logout();\n        window.location.assign('../../');\n    }\n        \n        return (\n            <div className=\"blog\">\n                <div className=\"blog-upload\">\n                    {props.loggedIn ?\n                        (<div>\n                            <h1><span>H</span>ello {props.username}</h1>\n                            <NewPost />\n                        </div>) :\n                        (<div>\n                            <h2>{url[3]}'s blog</h2>\n                            \n                        </div>)\n                    }\n                    <div>\n                    <Link to='gallery'>Go To Gallery</Link> </div>\n                    <div>\n                        <Link to={''}>Home</Link>\n                    </div>\n                    {props.loggedIn ?\n                        (<div>\n                            <p><Link to=\"#\" onClick={handleLogOut}>Log out</Link></p>\n                        </div>) :\n                        (<div>\n                            <p><Link to=''>Sign in</Link></p>\n                            <p><Link to='/signup'>Sign up</Link></p>\n                        </div>)\n                    }\n                </div>\n                <div className=\"posts\">\n                    <Posts loggedIn={props.loggedIn} _id={props._id} />\n                </div>\n            </div>\n    )\n};\n\nexport default Blog;","import React, { useRef, useState } from 'react';\nimport { useUserContext } from '../utils/GlobalState'\nimport axios from 'axios';\nimport API from '../utils/API';\n\nconst Upload = () => {\n\n    const [state, dispatch] = useUserContext();\n    console.log('state in upload', state)\n\n    const [fileState, setFileState] = useState({\n        message: '',\n        file: '',\n        fileUrl: '',\n        url: ''\n    });\n\n    const [artState, setArtState] = useState({\n        title: '',\n        postBody: '',\n        tags: []\n    });\n    \n    const imgRef = useRef();\n    const titleRef = useRef();\n    const bodyRef = useRef();\n    const tagsRef = useRef();\n\n    // dynamic host for putting/getting images to/from bucket\n    const host = window.location.host;\n    const protocol = window.location.protocol;\n    // console.log('host url', host)\n    const getImage = e => {\n        e.preventDefault();\n        const files = imgRef.current.files;\n        // console.log(files);\n        if (files && files.length > 0) {\n            const file = files[0];\n            setFileState({\n                ...fileState,\n                file,\n                fileUrl: URL.createObjectURL(e.target.files[0])\n            });\n        };\n    };\n    // console.log('img upload state:', fileState);\n    const uploadFile = e => {\n        e.preventDefault();\n        const { file } = fileState;\n        setFileState({ ...fileState, message: 'Uploading...' });\n        // console.log('file.type', file.type);\n        const contentType = file.type;\n\n        const generatePutUrl = `${protocol}//${host}/generate-put-url`;\n        // console.log('generatePutUrl', generatePutUrl)\n        const options = {\n            params: {\n                Key: `${state.username}/works/${Date.now()}_${file.name}`,\n                ContentType: contentType\n            },\n            headers: {\n                'Content-Type': contentType\n            }\n        };\n\n        axios.get(generatePutUrl, options)\n            .then(res => {\n                // console.log('res.data', res.data)\n                const { data } = res;\n                // console.log('put url from res.data', data);\n\n                axios.put(data, file, options)\n                    .then((res) => {\n                        // console.log('put file', res.config.params);\n                        setFileState({ ...fileState, message: 'Upload Successful' });\n\n                        const params = res.config.params;\n                        const generateGetUrl = `${protocol}//${host}/generate-put-url`\n                        const options = {params};\n\n                        axios.get(generateGetUrl, options)\n                            .then(res => {\n                                const { data } = res;\n                                const url = data.replace(/\\?.*/, '');\n                                // console.log('replace ? and key in url', url);\n                                setFileState({ ...fileState, url })\n\n                                handlePost(url);\n                            })\n                    })\n                    .catch(err => {\n                        setFileState({ ...fileState, message: 'Something went wrong, try again' });\n                        console.log('err', err);\n                    });\n            });\n    };\n\n    const handlePost = (url) => {\n        const { title, postBody, tags } = artState;\n        const { _id } = state;\n        console.log('_id in handlePost', _id)\n        const newArt = {\n            userId: _id,\n            url,\n            title,\n            postBody,\n            tags\n        };\n\n        API.postArt(newArt);\n        setFileState({\n            fileUrl: ''\n        })\n        dispatch({\n            ...state,\n            uploaded: true\n        })\n        // uploadedImg.current.src = '';\n        titleRef.current.value = '';\n        bodyRef.current.value = '';\n        tagsRef.current.value = '';\n    }\n\n    const handleChange = e => {\n        e.preventDefault();\n        const title = titleRef.current.value;\n        const postBody = bodyRef.current.value;\n        const tags = tagsRef.current.value.split(',');\n        const prettyTags = tags.map(tag => {\n            const trimTag = tag.trim();\n            const regex = /\\s+/g;\n            const underscoreTag = trimTag.replace(regex, '_');\n            return underscoreTag;\n        });\n\n        setArtState({\n            ...artState,\n            title,\n            postBody,\n            tags: prettyTags\n        })\n    }\n    \n    return (\n        <div>\n            <form>\n                <div>\n                    <label htmlFor=\"upload\">Choose an image</label>\n                    <input id=\"upload-file\" type=\"file\" name=\"upload\" accept=\"image/*\" onChange={getImage} ref={imgRef} />\n                </div>\n                <div className=\"upload-mess\">\n                    {fileState.message}\n                </div>\n                <div>\n                <label htmlFor=\"title\"> Title: </label>\n                    <input type=\"text\" name=\"title\" ref={titleRef} onChange={handleChange} />\n                </div>\n                <div>\n                <label htmlFor=\"body\">Description:</label>\n                    <textarea name=\"body\" ref={bodyRef} onChange={handleChange} />\n                </div>\n                <div>\n                <label htmlFor=\"tags\">Tags, separated by a comma:</label>\n                    <input type=\"text\" name=\"tags\" ref={tagsRef} onChange={handleChange} />\n                </div>\n                <div>\n                    <button onClick={uploadFile}>Submit</button>\n                </div>\n                {fileState.fileUrl ?\n                    (<div className=\"upload-prev\">\n                        <img src={fileState.fileUrl} alt=\"preview\" width=\"140px\" />\n                    </div>):\n                    (<h4>Preview...</h4>)}\n                \n                    \n                    \n            </form>\n        </div>\n    )\n}\n\nexport default Upload;","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst Tags = props => {\n    // console.log('tag props', props)\n    const { tags } = props;\n    return (\n        <Link to={{\n            pathname: 'gallery/' + tags,\n            state: {\n                works: props.works\n            }\n        }} key={tags}>{tags}</Link>        \n    )\n}\n\nexport default Tags;","import React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useUserContext } from '../utils/GlobalState';\nimport API from '../utils/API';\nimport Upload from './Upload';\nimport Tags from './Tags';\nimport { GALLERY_PROPS } from '../utils/actions';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nconst Gallery = props => {\n    const [state, dispatch] = useUserContext();\n    const [worksState, setWorksState] = useState({\n        works: [],\n        pfp: '',\n        nickname: '',\n        bio: '',\n        twitter: '',\n        _id: ''\n    });\n    // const [post, setPost] = useState({});\n    const pathId = window.location.pathname.split('/')\n\n    console.log('worksState', worksState)\n    console.log('props', props)\n\n    useEffect(() => {\n        // console.log('props', props._id)\n        API.getUser(pathId[1])\n            .then(res => {\n                console.log('gallery get res', res.data)\n                setWorksState({\n                    works: res.data.works,\n                    pfp: res.data.pfp,\n                    nickname: res.data.nickname,\n                    twitter: res.data.twitter,\n                    bio: res.data.bio,\n                    _id: res.data._id\n                });\n                dispatch({\n                    ...state,\n                    type: GALLERY_PROPS,\n                    username: res.data.username,\n                    _id: res.data._id,\n                    uploaded: false\n                })\n             })\n    }, [state.uploaded])\n\n    const handleDelete = (id) => {\n        API.deleteArt(id)\n        dispatch({\n            ...state,\n            uploaded: true\n        })\n    }\n    \n    const { works, nickname, pfp, twitter, bio } = worksState;\n    console.log('works in gallery', works)\n\n    const handleLogOut = () => {\n        API.logout();\n        window.location.assign('../../');\n    }\n\n    const folioTag = 'portfolio';\n\n    if (!works || !works.length) {\n        return (\n            <div className=\"gallery-box\">\n            <div className=\"profile\">\n                    <h1>Welcome to <span>X</span>folio: {props.username}</h1>\n                    <img src={pfp} alt=\"profile picture\" height=\"150px\" width=\"150px\" />\n                    <a href={twitter} target=\"_blank\"><FontAwesomeIcon icon={['fab', 'twitter']} /> profile</a>\n                    <div>\n                        <p>Bio: {bio}</p>\n                    </div>\n            {props.loggedIn ?\n                (<div>\n                    <Link to={`../../${props.username}/setup`}>Update Profile</Link>\n                    <Upload />\n                </div>) :\n                (<div>\n                    <h2>{pathId[1]}'s gallery</h2>\n                </div>)\n            }\n            <Link to={'blog'}>Go To Blog</Link>\n                {props.loggedIn ?\n                    (<div>\n                        <p><Link to='#' onClick={handleLogOut}>Log out</Link></p>\n                    </div>):\n                    (<div>\n                        <p><Link to='/login'>Sign in</Link></p>\n                        <p><Link to='/signup'>Sign up</Link></p>\n                    </div>)\n                    }\n                    <div>\n                        <Link to={''}>Home</Link>\n                    </div>\n            </div>\n            <div className=\"gallery\">\n                <h3>No posts yet!</h3>\n            </div>\n            </div>\n\n        )\n    } else {\n        return (\n          <div className=\"gallery-box\">\n                <div className =\"profile\">\n                    <h1>Welcome to <span>X</span>folio: {props.username}</h1>\n                    <img src={pfp} alt=\"profile picture\" height=\"150px\" width=\"150px\" />\n                    <a href={twitter} target=\"_blank\"><FontAwesomeIcon icon={['fab', 'twitter']} /> profile</a>\n                    <p>Bio: {bio}</p>\n                    \n                    {props.loggedIn ?\n                        (<div>\n                            <Link to={`../../${props.username}/setup`}>Update Profile</Link>\n                            <Upload />\n                        </div>) :\n                        (<div>\n                            <h2>Now viewing {pathId[1]}'s gallery</h2>\n                        </div>)}\n                    <Link to={'blog'}>Blog Page</Link>\n                    <div>\n                    <Link to={{\n                        pathname: `gallery/${folioTag}`,\n                        state: { works: works }\n                    }}>Portfolio</Link>\n                    </div>\n                    <div>\n                        <Link to={''}>Home</Link>\n                    </div>\n                    {props.loggedIn ?\n                        (<p><Link to=\"#\" onClick={handleLogOut}>Log out</Link></p>) :\n                        (<div><p><Link to='/login'>Sign in</Link></p>\n                        <p><Link to='/signup'>Sign up</Link></p></div>)\n                    }\n                </div>\n                <div className=\"gallery\">\n                {works.map(post => (\n                    <div className=\"gall\" key={post._id}>\n                        <div className=\"gall-thumb\">\n                            <Link to={{\n                                pathname: 'gallery/work/' + post._id,\n                                state: {\n                                    postId: post._id,\n                                    postTitle: post.title,\n                                    postImg: post.img,\n                                    postDesc: post.description,\n                                    postTags: post.tags\n                                }\n                            }}>\n                                <img src={post.img} alt={post.title} />\n                            </Link>\n                        </div>\n                       \n                        <div className=\"gall-info\">\n                        <div className=\"gall-title\">\n                            {post.title}     \n                        </div>\n                        {/* <div className=\"gall-descrip\">\n                            {post.description}\n                        </div> */}\n                            <div className=\"gall-tags\">\n                                {post.tags.map(tag => (\n                                    <span key={tag}><Tags works={works} tags={tag} /> </span>\n                                ))}\n                        </div> \n                            {props.loggedIn ? (\n                                <div>\n                                <button className=\"del-butt\" onClick={() => handleDelete(post._id)}>\n                                    <FontAwesomeIcon icon=\"trash\" />\n                                    </button>\n                                    <button className=\"edit-butt\">\n                                    <Link to={{\n                                        pathname: 'gallery/update/' + post._id,\n                                        state: {\n                                            ...post\n                                        }\n                                    }}>\n                                    {/* <i className=\"edit-butt\"> */}\n                                        <FontAwesomeIcon icon=\"pencil-alt\" />\n                                    {/* </i> */}\n                                </Link>\n                                    </button>\n                                </div>) :\n                                (<span></span>)}\n                        \n                        </div>\n                    </div>\n\n                    ))}\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Gallery;","import React from 'react';\nimport { Link } from 'react-router-dom'\n\nconst SinglePost = props => {\n    const post = props.location.state\n    // console.log('post props in SinglePost', post)\n    return (\n        <div className=\"single-post\">\n            <Link to={{pathname: '../blog'}}>Back to blog</Link>\n            {post ?\n                (<div>\n                    <div className=\"post-title\">\n                        <h1>{post.title}</h1>\n                    </div>\n                    <div className=\"post-body\">\n                        <p>{post.body}</p>\n                    </div>\n                    <div className=\"post-tags\">Tagged: {post.tags.map(tag => (\n                        <span key={tag}>{tag} </span>\n                    ))}\n                    </div>\n                    <div>\n                        <Link onClick={() => window.history.back()}>Go back</Link>\n                    </div>\n                </div>) : (<h3>Loading...</h3>)}           \n        </div>\n    )\n}\n\nexport default SinglePost;","import React, { useEffect } from 'react';\nimport { Link } from 'react-router-dom';\n\nconst FilteredArt = props => {\n    // console.log('props in FilteredArt', props.location.state.works)\n\n    const mapTags = props.location.state.works.map(post => {\n        return post.tags\n    })\n\n    const tags = []\n    mapTags.filter(tag => {\n        for (let i = 0; i < tag.length; i++) {\n            if (tag[i] === props.match.params.tag) {\n                tags.push(tag)\n            }\n        }\n    })\n    // console.log('filtered tags', tags)\n\n    const posts = props.location.state.works.filter(post => {\n        // console.log('post in posts filter', post)\n        for (let res of tags) {\n            if (post.tags === res) {\n                return post\n            }\n        }        \n    })\n    // console.log(\"posts if they match???\", posts)\n    // console.log('state in FilteredArt', state)\n\n    if (!posts.length) { \n        return (\n            <div className=\"detail-box\">\n            <div className=\"profile\">\n                <h2>Here's all artworks tagged '{props.match.params.tag}'</h2>\n                <div>\n                    <p><Link to={'../../' + props.match.params.username + '/gallery'}>Go back</Link></p>\n                </div>\n            </div>\n            <div className=\"gallery\">\n                <h1>No posts tagged '{props.match.params.tag}' yet</h1>\n            </div>\n            </div>\n        )\n    } else {\n        return (\n            <div className=\"gallery-box\">\n                <div className=\"profile\">\n                    <h2>Here's all artworks tagged '{props.match.params.tag}'</h2>\n                    <div>\n                        <p><Link to={'../../' + props.match.params.username + '/gallery'}>Go back</Link></p>\n                    </div>\n                </div>\n                <div className=\"gallery\">\n                    {posts.map(post => (\n                        <div key={post._id} className=\"gall\">\n                            <div className=\"gall-thumb\">\n                                <Link to={{\n                                    pathname: 'work/' + post._id,\n                                    state: {\n                                        postId: post._id,\n                                        postTitle: post.title,\n                                        postImg: post.img,\n                                        postDesc: post.description,\n                                        postTags: post.tags\n                                    }\n                                }}>\n                                    <img src={post.img} alt={post.title} />\n                                </Link>\n                            </div>\n                            <div>\n                                <h2><i>{post.title}</i></h2>\n                            </div>\n                            <div>\n                                {post.description}\n                            </div>\n                            <div className=\"gall-tags\">\n                                {post.tags}\n                            </div>\n                        </div>\n                    ))}\n                </div>\n            </div>\n        \n        )\n    }\n}\n\nexport default FilteredArt;","import React, { useRef, useState } from 'react';\nimport API from '../utils/API';\nimport { Link } from 'react-router-dom';\n\nconst UpdateArt = ({location, match}) => {\n    // console.log('props.location in UpdateArt', location)\n    // console.log('props.match in UpdateArt', match)\n    const [update, setUpdate] = useState();\n    const { state } = location;\n    const { params } = match;\n\n    const titleRef = useRef();\n    const bodyRef = useRef();\n    const tagsRef = useRef();\n\n    const handleChange = () => {\n        // console.log('formRef', bodyRef.current.value)\n        setUpdate({\n            title: titleRef.current.value,\n            description: bodyRef.current.value,\n            tags: tagsRef.current.value.split(',')\n        })\n    }\n\n    // console.log('update state', update)\n    const handleUpdate = (e) => {\n        e.preventDefault();\n        API.updateArt(params.id, update)\n            \n        window.location.assign('/' + params.username + '/gallery')  \n    }\n\n    return (\n        <div>\n            <form onChange={handleChange}>\n                <div  className=\"detail-box\">\n            <div className=\"full-info\">\n                <div>\n                <label htmlFor=\"title\">Title:</label>\n                    <input type=\"text\" name=\"title\" defaultValue={state.title} ref={titleRef} />\n                </div>\n                <div>\n                <label htmlFor=\"body\">Description:</label>\n                    <textarea name=\"body\" defaultValue={state.description} ref={bodyRef} />\n                </div>\n                <div>\n                <label htmlFor=\"tags\">Tags, separated by a comma:</label>\n                    <input name=\"tags\" type=\"text\" defaultValue={state.tags} ref={tagsRef} />\n                </div>\n                <div>\n                    <button onClick={handleUpdate}>Save</button>\n                </div>\n                <div className=\"go-back\">\n                            <Link to={'/' + params.username + '/gallery'}>Go back</Link>\n                    </div>\n                </div>\n                <div className=\"full-image\">\n                <img className=\"full-image\" src={state.img} alt={state.title} />\n                </div>\n                </div>\n            </form>\n        </div>\n    )\n}\n\nexport default UpdateArt;","import React, { useRef, useState } from 'react';\nimport API from '../utils/API';\n\nconst UpdateBlog = props => {\n    const [post, setPost] = useState();\n\n    const titleRef = useRef();\n    const bodyRef = useRef();\n    const tagsRef = useRef();\n\n    // console.log('props in UpdateBlog', props)\n    const handleChange = () => {\n        setPost({\n            title: titleRef.current.value,\n            body: bodyRef.current.value,\n            tags: tagsRef.current.value\n        })\n    }\n\n    const handleUpdate = e => {\n        e.preventDefault();\n        API.updateJournal(props.match.params.id, post);\n        window.location.assign(`../../../${props.match.params.username}/blog`)\n    }\n    // console.log('state in updateblog', post)\n    return (\n        <div className=\"dark\">\n            <div>\n                <h1>update this post?</h1>\n            </div>\n            <div className=\"blog-upload\">\n                <form onChange={handleChange}>\n                    <div>\n                        <input type=\"text\" defaultValue={props.location.state.title} ref={titleRef} />\n                    </div>\n                    <div>\n                        <textarea defaultValue={props.location.state.body} ref={bodyRef} />\n                    </div>\n                    <div>\n                        <input type=\"text\" defaultValue={props.location.state.tags} ref={tagsRef} />\n                    </div>\n                    <div>\n                        <button onClick={handleUpdate}>Submit</button>\n                    </div>\n                </form>\n            </div>\n        </div>\n    )\n}\n\nexport default UpdateBlog;","import React, { useRef, useState } from 'react';\nimport { useUserContext } from '../utils/GlobalState';\nimport API from '../utils/API';\nimport Granim from 'react-granim'\nimport axios from 'axios'\n\nconst NewProfile = props => {\n    const granimColor = ({\n        \"default-state\": {\n            gradients: [\n                ['#e5ff00', '#ff5100'],\n                ['#00ffff', '#556270'],\n                ['#ff0062', '#7ea0c4'],\n                ['#6200ff', '#fd0000']\n            ],\n            transitionSpeed: 7000\n        }\n    });\n\n    const granimImg = ({ source: '../images/bg.jpeg', blendingMode: 'multiply' });\n\n    // const [state, dispatch] = useUserContext();\n\n    // console.log('state in NewProfile', state)\n\n    const [fileState, setFileState] = useState({\n        message: '',\n        file: '',\n        fileUrl: '',\n        url: ''\n    });\n\n    const [bioState, setBioState] = useState({\n        nickname: '',\n        bio: '',\n        twitter: ''\n    });\n\n    const imgRef = useRef();\n    const twitRef = useRef();\n    const bioRef = useRef();\n    const nickRef = useRef();\n\n    // dynamic host for putting/getting images to/from bucket\n    const host = window.location.host;\n    const protocol = window.location.protocol;\n    // console.log('host url', host)\n    const getImage = e => {\n        e.preventDefault();\n        const files = imgRef.current.files;\n        // console.log(files);\n        if (files && files.length > 0) {\n            const file = files[0];\n            setFileState({\n                ...fileState,\n                file,\n                fileUrl: URL.createObjectURL(e.target.files[0])\n            });\n        };\n    };\n    // console.log('img upload state:', fileState);\n    const uploadFile = e => {\n        e.preventDefault();\n        const { file } = fileState;\n        setFileState({ ...fileState, message: 'Uploading...' });\n        // console.log('file.type', file.type);\n        const contentType = file.type;\n\n        const generatePutUrl = `${protocol}//${host}/generate-put-url`;\n        // console.log('generatePutUrl', generatePutUrl)\n        const options = {\n            params: {\n                Key: `${props.username}/pfp/${Date.now()}_${file.name}`,\n                ContentType: contentType\n            },\n            headers: {\n                'Content-Type': contentType\n            }\n        };\n\n        axios.get(generatePutUrl, options)\n            .then(res => {\n                // console.log('res.data', res.data)\n                const { data } = res;\n                // console.log('put url from res.data', data);\n\n                axios.put(data, file, options)\n                    .then((res) => {\n                        // console.log('put file', res.config.params);\n                        setFileState({ ...fileState, message: 'Upload Successful' });\n\n                        const params = res.config.params;\n                        const generateGetUrl = `${protocol}//${host}/generate-put-url`\n                        const options = { params };\n\n                        axios.get(generateGetUrl, options)\n                            .then(res => {\n                                const { data } = res;\n                                const url = data.replace(/\\?.*/, '');\n                                // console.log('replace ? and key in url', url);\n                                setFileState({ ...fileState, url })\n\n                                handlePost(url);\n                            })\n                    })\n                    .catch(err => {\n                        setFileState({ ...fileState, message: 'Something went wrong, try again' });\n                        console.log('err', err);\n                    });\n            });\n    };\n    \n    console.log('bioState', bioState)\n\n    const handlePost = (url) => {\n        const { nickname, bio, twitter } = bioState;\n        // const { _id } = state;\n        // console.log('_id in handlePost', _id)\n        const newPf = {\n            _id: props._id,\n            pfp: url,\n            nickname: nickname,\n            bio: bio,\n            twitter: twitter\n        };\n\n        console.log('newPF', newPf);\n\n        API.updateUser(newPf);\n        window.location.assign(`../../${props.username}/gallery`)\n    }\n\n    const handleChange = () => {\n        const nickname = nickRef.current.value;\n        const bio = bioRef.current.value;\n        const twitter = twitRef.current.value;\n\n        setBioState({\n            ...bioState,\n            nickname,\n            bio,\n            twitter\n        })\n    }\n\n    return (\n        <div className=\"signup-page\">\n            <div className=\"container signup login\">\n            <form>\n                <div>\n                    <label htmlFor=\"upload\">Choose an image</label>\n                    <input id=\"upload-file\" type=\"file\" name=\"upload\" accept=\"image/*\" onChange={getImage} ref={imgRef} />\n                </div>\n                {fileState.fileUrl ?\n                    (<div className=\"upload-prev\">\n                        <img src={fileState.fileUrl} alt=\"preview\" width=\"140px\" />\n                    </div>) :\n                    (<h4>Preview...</h4>)\n                }\n                <div className=\"upload-mess\">\n                    {fileState.message}\n                </div>\n                <div>\n                        <label htmlFor=\"nickname\">Nickname: </label><br />\n                    <input type=\"text\" name=\"title\" ref={nickRef} onChange={handleChange} />\n                </div>\n                <div>\n                    <label htmlFor=\"bio\">Bio:</label><br />\n                    <textarea name=\"body\" ref={bioRef} onChange={handleChange} />\n                </div>\n                <div>\n                        <label htmlFor=\"twit\">Twitter:</label><br />\n                    <input type=\"text\" name=\"twit\" ref={twitRef} onChange={handleChange} />\n                </div>\n                <div>\n                    <button onClick={uploadFile}>Submit</button>\n                </div>\n                </form>\n            </div>\n            <Granim isPausedWhenNotInView=\"true\" image={granimImg} states={granimColor} id=\"canvas-image\" />\n        </div>\n    )\n}\n\nexport default NewProfile;","import React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\nimport { UserProvider } from './utils/GlobalState'\nimport Container from './components/Container';\nimport Login from './components/Login';\nimport Signup from './components/Signup';\nimport ArtWork from './components/ArtWork';\nimport Blog from './components/Blog';\nimport Gallery from './components/Gallery';\nimport SinglePost from './components/SinglePost';\nimport FilteredArt from './components/FilteredArt';\nimport UpdateArt from './components/UpdateArt';\nimport UpdateBlog from './components/UpdateBlog';\nimport NewProfile from './components/NewProfile';\nimport API from './utils/API';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { fab } from '@fortawesome/free-brands-svg-icons';\nimport { faTrash, faPencilAlt } from '@fortawesome/free-solid-svg-icons';\n\nlibrary.add(fab, faTrash, faPencilAlt);\n\n\nconst App = () => {  \n\n  const [isLoggedIn, setIsLoggedIn] = useState({\n    loggedIn: false,\n    username: '',\n    _id: ''\n  });\n\n  // console.log('isLoggedIn state', isLoggedIn)\n\n  useEffect(() => {\n    API.status()\n      .then(res => {\n          // console.log('res in App.js useEffect', res.data)\n          setIsLoggedIn({\n            loggedIn: true,\n            username: res.data.user[0].username,\n            _id: res.data.user[0]._id\n          });\n      })\n      .catch(e => {\n        console.log('error', e)\n      })\n  }, [])\n  \n  \n  const { loggedIn, username, _id } = isLoggedIn;\n  return (\n  <UserProvider>\n    <Router>\n      <Container loggedIn={loggedIn}>\n        <Switch>\n            <Route exact path={['/', '/login']}>\n              <Login loggedIn={loggedIn} username={username} id={_id} />\n            </Route>\n            <Route exact path='/signup' component={Signup} />\n            <Route exact path='/:username/setup'>\n              <NewProfile username={username} _id={_id} />\n            </Route>\n          <Route exact path='/:username/blog'>\n            <Blog loggedIn={loggedIn} username={username} _id={_id} />\n          </Route>\n          <Route exact path='/:username/blog/:id' component={SinglePost} />\n            <Route exact path='/:username/gallery/work/:id' component={ArtWork} />\n            <Route exact path='/:username/gallery/:tag' component={FilteredArt} />\n          <Route exact path='/:username/gallery'>\n            <Gallery loggedIn={loggedIn} username={username} />\n            </Route>\n          <Route exact path='/:username/blog/update/:id' component={UpdateBlog} />\n          <Route exact path='/:username/gallery/update/:id' component={UpdateArt} />\n        </Switch>\n      </Container>\n    </Router>\n  </UserProvider>\n  )\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}