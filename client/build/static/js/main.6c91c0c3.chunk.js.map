{"version":3,"sources":["utils/actions.js","utils/GlobalState.js","components/Container.js","utils/API.js","components/RecentArt.js","components/Login.js","components/Signup.js","components/ArtWork.js","components/Post.js","components/NewPost.js","components/Blog.js","components/Upload.js","components/Tags.js","components/Gallery.js","components/SinglePost.js","components/FilteredArt.js","components/UpdateArt.js","components/UpdateBlog.js","App.js","serviceWorker.js","index.js"],"names":["UserContext","createContext","Provider","reducer","state","action","type","console","log","_id","username","postId","postImg","postTitle","postDesc","postTags","password","initialState","nickname","journal","works","favorites","uploaded","UserProvider","value","props","useReducer","dispatch","useUserContext","useContext","Container","className","children","loggedIn","axios","get","newUser","post","email","login","newArt","id","update","put","delete","newPost","RecentArt","mapTags","map","tags","filter","tag","i","length","push","posts","res","img","filteredPosts","nsfwFilter","key","title","to","pathname","user","description","src","alt","granimColor","gradients","transitionSpeed","granimImg","source","blendingMode","Login","useState","setState","art","setArt","useEffect","API","then","data","nameRef","useRef","passRef","handleChange","current","handleLogin","e","preventDefault","window","location","assign","catch","err","name","placeholder","onChange","ref","onClick","isPausedWhenNotInView","image","states","Signup","signUp","setSignUp","emailRef","ArtWork","match","params","Posts","body","handleDelete","icon","NewPost","postState","setPostState","titleRef","bodyRef","tagsRef","split","trim","replace","htmlFor","userId","Blog","url","toString","Post","Upload","message","file","fileUrl","fileState","setFileState","postBody","artState","setArtState","imgRef","host","protocol","handlePost","prettyTags","accept","files","URL","createObjectURL","target","contentType","generatePutUrl","options","Key","Date","now","ContentType","headers","config","generateGetUrl","width","Tags","Gallery","worksState","setWorksState","pathId","handleLogOut","SinglePost","FilteredArt","UpdateArt","setUpdate","defaultValue","UpdateBlog","setPost","library","add","faTrash","faPencilAlt","App","isLoggedIn","setIsLoggedIn","exact","path","component","Boolean","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.6c91c0c3.chunk.js","sourcesContent":["export const ADD_JOURNAL_POST = 'ADD_JOURNAL_POST';\nexport const UPDATE_JOURNAL = 'UPDATE_JOURNAL';\nexport const REMOVE_JOURNAL_POST = 'REMOVE_JOURNAL_POST';\nexport const SET_CURRENT_POST = 'SET_CURRENT_POST';\n // artwork actions\nexport const ADD_ARTWORK = 'ADD_ARTWORK';\nexport const UPDATE_ARTWORK = 'UPDATE_ARTWORK';\nexport const REMOVE_ARTWORK = 'REMOVE_ARTWORK';\nexport const SET_CURRENT_ARTWORK = 'SET_CURRENT_ARTWORK';\n // user actions\nexport const LOGIN_USER = 'LOGIN_USER';\nexport const ADD_USER = 'ADD_USER';\nexport const UPDATE_USER = 'UPDATE_USER';\nexport const REMOVE_USER = 'REMOVE_USER';\nexport const SET_CURRENT_USER = 'SET_CURRENT_USER';\nexport const GET_CURRENT_USER = 'GET_CURRENT_USER';\n // favoriting actions\nexport const ADD_FAVE = 'ADD_FAVE';\nexport const REMOVE_FAVE = 'REMOVE_FAVE';\nexport const UPDATE_CURRENT_FAVE = 'UPDATE_CURRENT_FAVE';\n\nexport const GALLERY_PROPS = 'GALLERY_PROPS';\nexport const POST_PROPS = 'POST_PROPS'\n\n","import React, { createContext, useReducer, useContext } from 'react';\n\nimport { SET_CURRENT_USER, LOGIN_USER, ADD_USER, GALLERY_PROPS } from './actions';\n\nconst UserContext = createContext();\nconst { Provider } = UserContext;\n\nconst reducer = (state, action) => {\n    // console.log('action object', action.type) // console logs the action object with all the info I need to store\n    // const { type, _id, username, nickname, journal, works, favorites, password } = action;\n    switch (action.type) {\n        case SET_CURRENT_USER:\n            console.log('action inside SET CURRENT', action);\n            return {\n                ...state,\n                type: action.type,\n                _id: action._id,\n                username: action.username,\n                postId: action.postId,\n                postImg: action.postImg,\n                postTitle: action.postTitle,\n                postDesc: action.postDesc,\n                postTags: action.postTags,\n                password: '',\n\n            }\n        case LOGIN_USER:\n            return {\n                ...action\n            };\n        case ADD_USER: \n            return {\n                ...action\n            };\n        case GALLERY_PROPS:\n            return {\n                ...state,\n                ...action            }\n        default:\n            return state;\n    }\n};\n\nlet initialState = {\n    type: '',\n    _id: '0',\n    username: '',\n    nickname: '',\n    journal: [],\n    works: [],\n    favorites: [],\n    password: '',\n    uploaded: false,\n    postId: '',\n    postImg: '',\n    postTitle: '',\n    postDesc: '',\n    postTags: []\n    // loggedIn: false\n};\n\nconst UserProvider = ({ value = [], ...props }) => {\n    const [state, dispatch] = useReducer(reducer, initialState);\n    // console.log('UserProvider props', props);\n    return <Provider value={[state, dispatch]} {...props} />\n};\n\nconst useUserContext = () => {\n    return useContext(UserContext);\n};\n\nexport { UserProvider, useUserContext };","import React from 'react';\n\n\nconst Container = (props) => {\n    // console.log('props.children', props.children)\n    return (\n        <div className=\"router-container\">\n            {props.children} {props.loggedIn}\n        </div>\n    )\n};\n\nexport default Container;\n\n","import axios from 'axios';\n\nexport default {\n    // getUsers: function () {\n    //     return axios.get('/api/user');\n    // },\n    getUser: function (username) {\n        // console.log(username)\n        return axios.get('/api/user/' + username)\n    },\n    registerUser: function (newUser) {\n        return axios.post('/api/user', {\n            username: newUser.username,\n            password: newUser.password,\n            email: newUser.email\n        })\n    },\n    login: function (login) {\n        return axios.post('/api/user/login', {\n            username: login.username,\n            password: login.password\n        })\n    },\n    logout: function () {\n        return axios.post(\"/api/user/logout\");\n    },\n    status: function () {\n        return axios.get('/api/user');\n    },\n    recentArt: () => {\n        return axios.get('/api/artwork');\n    },\n    postArt: (newArt) => {\n        return axios.post('/api/artwork', newArt);\n    },\n    getArt: (username) => {\n        return axios.get('/api/artwork/' + username)\n    },\n    updateArt: (id, update) => {\n        return axios.put('/api/artwork/' + id, {\n            ...update\n        })\n    },\n    deleteArt: (id) => {\n        return axios.delete('/api/artwork/' + id)\n    },\n    postJournal: (newPost) => {\n        return axios.post('/api/blog', newPost);\n    },\n    getJournal: (username) => {\n        return axios.get('/api/blog/' + username)\n    },\n    updateJournal: (id, update) => {\n        return axios.put('/api/blog/' + id, {\n            ...update\n        })\n    },\n    deleteJournal: (id) => {\n        return axios.delete('/api/blog/' + id)\n    }\n}","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport API from '../utils/API'\r\n\r\nconst RecentArt = (props) => {\r\n\r\n    const mapTags = props.works.works.map(post => {\r\n        return post.tags\r\n    })\r\n\r\n\r\n    const tags = []\r\n    mapTags.filter(tag => {\r\n        for (let i = 0; i < tag.length; i++) {\r\n            if (tag[i] === \"nsfw\") {\r\n                tags.push(tag)\r\n            }\r\n        }\r\n    })\r\n\r\n    // console.log('filtered tags', tags)\r\n\r\n    const posts = props.works.works.filter(post => {\r\n        // console.log('post in posts filter', post)\r\n        for (let res of tags) {\r\n            if (post.tags === res) {\r\n                return post\r\n            }\r\n        }\r\n    })\r\n\r\n    console.log('filtered posts in recentart', posts.img)\r\n\r\n    console.log('props in RecentArt.js', props);\r\n\r\n    const filteredPosts= []\r\n    const nsfwFilter = props.works.works.filter(post => {\r\n        // console.log('post inside nsfwFilter', post)\r\n        for (let res of tags) {\r\n            if (post.tags === res && !props.loggedIn) {\r\n                post.img = '/images/r18-warning.jpg'\r\n                filteredPosts.push(post)\r\n            }\r\n        }\r\n        return post\r\n    })\r\n\r\n    console.log('nsfwFilter', nsfwFilter)\r\n\r\n        return (\r\n            <div className=\"recent-art\">\r\n                <h1>Recently uploaded art:</h1>\r\n                {props.works.works.map(post => (\r\n                    <div className=\"post\" key={post._id}>\r\n                        \r\n                        <div>\r\n                            <h2>{post.title}</h2>\r\n                        </div>\r\n                        <div>\r\n                            <Link to={{\r\n                                pathname: `${post.user.username}/gallery/work/${post._id}`,\r\n                                state: {\r\n                                    postId: post._id,\r\n                                    postTitle: post.title,\r\n                                    postImg: post.img,\r\n                                    postDesc: post.description,\r\n                                    postTags: post.tags\r\n                                }\r\n                            }}><img src={post.img} alt={post._id} /></Link>\r\n                        </div>\r\n                        <div>\r\n                            <p>{post.description}</p>\r\n                        </div>\r\n                        <div>\r\n                            <p>{post.tags}</p>\r\n                        </div>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        )\r\n    // }\r\n\r\n    // return (\r\n    //     <h3>hey bitch</h3>\r\n    // )\r\n}\r\n\r\nexport default RecentArt;","import React, { useRef, useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport RecentArt from './RecentArt'\nimport API from '../utils/API'\nimport Granim from 'react-granim';\n\n\n// initialize granim\nconst granimColor = ({   \"default-state\": {\n    gradients: [\n        ['#29323c', '#485563'],\n        ['#FF6B6B', '#556270'],\n        ['#80d3fe', '#7ea0c4'],\n        ['#f0ab51', '#eceba3']\n    ],\n    transitionSpeed: 7000}});\n\n// set granim image\nconst granimImg = ({ source: '../images/bg.jpeg', blendingMode: 'multiply' });\n\n// login component\nconst Login = props => {\n\n    console.log('props in login', props);\n    // setting up our state\n    const [state, setState] = useState({\n        username: '',\n        password: ''\n    });\n\n    const [art, setArt] = useState({\n        works: []\n    });\n\n    useEffect(() => {\n        API.recentArt()\n        .then(works => {\n            // console.log('response', works.data)\n            setArt({\n                works: works.data\n            })\n        })\n    }, [])\n\n    console.log('art', art)\n\n    // our element references\n    const nameRef = useRef();\n    const passRef = useRef();\n\n    // handle input change function\n    const handleChange = () => {\n        // variables to dispatch\n        const username = nameRef.current.value;\n        const password = passRef.current.value;\n        // const type = LOGIN_USER;\n\n        // dispatch to our global state\n        setState({\n            // ...state,\n            // type,\n            username,\n            password\n        })\n    };\n\n    // posts user data to the api to validate against the database\n    const handleLogin = (e) => {\n        e.preventDefault();\n        const login = {\n            username: state.username,\n            password: state.password\n        }\n        console.log('components/Login.js login', login)\n        API.login(login)\n            .then((user) => {\n                console.log('Login.js api.login() result', user.data.username);\n                window.location.assign(`/${user.data.username}/gallery`);\n            }).catch(err => console.log(err));\n    };\n\n    if (!art) {\n        return (\n            <div className=\"login-page\">\n                <div className=\"container login\">\n                    <div>\n                        <h1><span>X</span>folio:</h1>\n                        {props.loggedIn ?\n                            (<div>\n                                <h1>Welcome back {props.username}!</h1>\n                                <p><Link to={`${props.username}/gallery`}>Your Gallery</Link></p>\n                                <p><Link to={`${props.username}/blog`}>Your Blog</Link></p>\n                            </div>):\n                            (<form>\n                                <div>\n                                    <input type = \"text\" name = \"username\" placeholder = \"Username\" onChange = { handleChange } ref = { nameRef } />\n                                </div>\n                                <div>\n                                    <input type=\"password\" name=\"password\" placeholder=\"password\" onChange={handleChange} ref={passRef} />\n                                </div>\n                                <Link to=\"/Signup\"><p>New to Xfolio? Sign up here</p></Link>\n                                <div>\n                                    <button name=\"login\" onClick={handleLogin}>sign in</button>\n                                </div>\n                            </form>)\n                        }  \n                    </div>\n                </div>\n            {/* <RecentArt works={art} /> */}\n              <Granim isPausedWhenNotInView =\"true\" image= {granimImg} states = {granimColor} id=\"canvas-image\" />\n            </div>\n        )\n    } else {\n        return (\n            <div className=\"login-page\">\n                <div className=\"container login\">\n                    <div>\n                        <h1><span>X</span>folio:</h1>\n                        {props.loggedIn ?\n                            (<div>\n                                <h1>Welcome back {props.username}!</h1>\n                                <p><Link to={`${props.username}/gallery`}>Your Gallery</Link></p>\n                                <p><Link to={`${props.username}/blog`}>Your Blog</Link></p>\n                            </div>) :\n                            (<form>\n                                <div>\n                                    <input type=\"text\" name=\"username\" placeholder=\"Username\" onChange={handleChange} ref={nameRef} />\n                                </div>\n                                <div>\n                                    <input type=\"password\" name=\"password\" placeholder=\"password\" onChange={handleChange} ref={passRef} />\n                                </div>\n                                <Link to=\"/Signup\"><p>New to Xfolio? Sign up here</p></Link>\n                                <div>\n                                    <button name=\"login\" onClick={handleLogin}>sign in</button>\n                                </div>\n                            </form>)\n                        } \n                    </div>\n                </div>\n                <RecentArt works={art} loggedIn={props.loggedIn} />\n                <Granim isPausedWhenNotInView=\"true\" image={granimImg} states={granimColor} id=\"canvas-image\" />\n            </div>\n        )\n    }\n}\n\nexport default Login;","import React, { useRef, useState } from 'react';\nimport { useUserContext } from '../utils/GlobalState'\nimport API from '../utils/API'\nimport { SET_CURRENT_USER, ADD_USER } from '../utils/actions';\nimport Granim from 'react-granim';\nimport { Link } from 'react-router-dom';\n\n\nconst granimColor = ({   \"default-state\": {\n    gradients: [\n        ['#e5ff00', '#485563'],\n        ['#FF6B6B', '#556270'],\n        ['#80d3fe', '#7ea0c4'],\n        ['#f0ab51', '#eceba3']\n    ],\n    transitionSpeed: 7000}});\n    \nconst granimImg = ({source: '../images/bg.jpeg', blendingMode: 'multiply'});\n\n\nconst Signup = () => {\n\n    const [state, dispatch] = useUserContext();\n    const [signUp, setSignUp] = useState({});\n\n    // const [userLogin, setUserLogin] = useState();\n\n    console.log(\"state\", state);\n\n    const emailRef = useRef();\n    const nameRef = useRef();\n    const passRef = useRef();\n\n    const handleChange = () => {\n        const email = emailRef.current.value;\n        const username = nameRef.current.value;\n        const password = passRef.current.value;\n\n        setSignUp({\n            // type: ADD_USER,\n            username: username,\n            password: password,\n            email: email\n        })\n\n        // setState\n        // console.log('state after login', state)\n    }\n\n    const handleSignup = (e) => {\n        e.preventDefault();\n        const newUser = {\n            email: signUp.email,\n            username: signUp.username,\n            password: signUp.password\n        }\n        console.log('components/Signup.js sign up', newUser)\n        API.registerUser(newUser)\n            .then((user) => {\n                console.log('Signup.js api.signup() result', user.data);\n                // const userData = user.data;\n                // setSignUp({\n                //     _id: userData._id,\n                //     username: userData.username\n                // })\n                \n                API.login({ username: signUp.username, password: signUp.password })\n                    .then(user => {\n                        console.log('user data after post to api/login from signup', user.data)\n                        dispatch({\n                            ...state,\n                            type: SET_CURRENT_USER,\n                            username: user.data.username,\n                            _id: user.data._id,\n                            // loggedIn: true\n                    })\n                })\n                    window.location.assign(`${signUp.username}/gallery`)\n            })\n                .catch(err => {\n                    if (err) console.log('components/Signup.js error', err);\n                })\n        }\n\n    return (\n        <div className=\"signup-page\">\n            <div className=\"container login signup\">\n                <div>\n                    <form>\n                        <h1>Welcome to <span>X</span>folio!</h1>\n                        <div>\n                            <input type=\"text\" name=\"email\" placeholder=\"email\" onChange={handleChange} ref={emailRef} />\n                    </div>\n                        <div>\n                            <input type=\"text\" name=\"username\" placeholder=\"Username\" onChange={handleChange} ref={nameRef} />\n                    </div>\n                    <div>\n                        <input type=\"password\" name=\"password\" placeholder=\"password\" onChange={handleChange} ref={passRef} />\n                        </div>\n                <Link to=\"/Login\"><p>Already have an account? Log in here</p></Link>\n                        <div>\n                            <button name=\"signup\" onClick={handleSignup}>sign up</button>\n                            <br />\n                        </div>\n                    </form>\n                </div>\n            </div>\n          <Granim isPausedWhenNotInView =\"true\" image= {granimImg} states = {granimColor} id=\"canvas-image\" />\n       </div>\n    )\n}\n\nexport default Signup;","import React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom'\nconst ArtWork = props => {\n    // console.log('props.match', props)\n\n    const art = props.location.state\n\n    // console.log('state from props', art)\n\n    // console.log('art state in detail', art)\n    return (\n        <div className=\"detail\">\n            {art ? (\n                <div className=\"detail-box\">\n                    <div className=\"full-info\">\n                    <div><h1>{art.postTitle}</h1></div>\n                    <div>{art.postDesc}</div>\n                    <div className=\"tags\"><p>Tagged: {art.postTags.map(tag => (\n                        <span key={tag}>{tag} </span>\n                        ))}\n                        </p>\n                        </div>\n                        \n                        <p><Link to={'../../../' + props.match.params.username + '/gallery'}>Back to gallery</Link></p>\n                        <p><Link to={''}>Home</Link></p>\n                    </div>\n                <div className=\"full-image\">\n                    <img className=\"full-image\" src={art.postImg} alt={art.postTitle} />\n                </div>\n                </div>\n                    \n                    \n        ) : (<h3>Loading...</h3>)}\n        </div >\n    )\n}\n\nexport default ArtWork;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { useUserContext } from '../utils/GlobalState';\nimport API from '../utils/API';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nconst Posts = props => {\n    const [state, setState] = useUserContext();\n\n    console.log('props in Post', props)\n\n    // const url = window.location.toString().split('/');\n\n    const handleDelete = id => {\n        API.deleteJournal(id)\n        setState({\n            ...state,\n            uploaded: true\n        })\n    }\n\n    const { journal } = state;\n    if (!journal.length) {\n        return (\n            <div>\n                <h3>You don't have any posts yet</h3>\n            </div>\n        )\n    } else {\n        return (\n            <div>\n                {journal.map(post => (\n                    <div key={post._id} className='postbox'>\n                        <Link to={{\n                            pathname: 'blog/' + post._id,\n                            state: {\n                                ...post\n                            }\n                        }}>\n                        <h2>{post.title}</h2>\n                        </Link>\n                        <div>\n                            {post.body}\n                        </div>\n                        <div className=\"tags\">\n                            {post.tags}\n                        </div>\n                        <div>\n                            <button onClick={() => handleDelete(post._id)}><FontAwesomeIcon icon=\"trash\" /></button>\n                            <Link to={{\n                                pathname: `blog/update/${post._id}`,\n                                state: {\n                                    ...post,\n                                    user: props._id\n                                }\n                            }}><FontAwesomeIcon icon=\"pencil-alt\" /></Link>\n                        </div>\n                    </div>\n                ))}\n            </div>\n        )\n    }\n}\n\nexport default Posts;","import React, { useRef, useState } from 'react';\nimport { useUserContext } from '../utils/GlobalState';\nimport API from '../utils/API';\nimport { GALLERY_PROPS } from '../utils/actions';\n\nconst NewPost = () => {\n    const [state, dispatch] = useUserContext();\n    const [postState, setPostState] = useState();\n\n    const titleRef = useRef();\n    const bodyRef = useRef();\n    const tagsRef = useRef();\n\n    const handleChange = e => {\n        e.preventDefault();\n        \n        const title = titleRef.current.value;\n        const body = bodyRef.current.value;\n        const tags = tagsRef.current.value.split(',');\n        const tag = tags.map(tag => {\n            const trimTag = tag.trim();\n            const regex = /\\s+/g;\n            const underscoreTag = trimTag.replace(regex, '_')\n            return underscoreTag;\n        })\n        \n        console.log({ title: title, body: body, tags: [tag] })\n        setPostState({\n            title,\n            body,\n            tags: tag\n        })\n    };\n\n    const handleSubmit = e => {\n        e.preventDefault();\n\n        const { title, body, tags } = postState;\n        const { _id } = state;\n        const newPost = {\n            userId: _id,\n            title,\n            body,\n            tags\n        };\n\n        API.postJournal(newPost)\n            // .then(post => {\n                // console.log('new post in NewPost.js result', post)\n                dispatch({\n                    ...state,\n                    type: GALLERY_PROPS,\n                    uploaded: true,\n                    // journal: post.data.journal\n                }\n               )\n        //    })\n    }\n\n    console.log('postState', postState);\n\n    return (\n        <div className=\"postbox\">\n            <form onChange={handleChange}>\n                <div>\n                <label htmlFor=\"title\">Title:</label>\n                    <input type=\"text\" name=\"title\" ref={titleRef} />\n                </div>\n                <div>\n                <label htmlFor=\"body\">Post:</label>\n                    <textarea name=\"body\" ref={bodyRef} />\n                </div>\n                <div>\n                <label htmlFor=\"tags\">Tags, separated by a comma:</label>\n                    <input type=\"text\" name=\"tags\" ref={tagsRef} />\n                </div>\n                <div>\n                    <button name=\"submit\" onClick={handleSubmit}>Submit Post</button>\n                </div>\n            </form>\n        </div>\n    )\n}\n\nexport default NewPost;","import React, { useEffect } from 'react';\nimport { useUserContext } from '../utils/GlobalState';\nimport { Link, useHistory } from 'react-router-dom';\nimport axios from 'axios';\nimport Posts from './Post';\nimport NewPost from './NewPost';\nimport { GALLERY_PROPS } from '../utils/actions';\nimport API from '../utils/API'\n\nconst Blog = (props) => {\n    const [state, dispatch] = useUserContext();\n    console.log('props in blog', props)\n    // console.log('window history', window.history)\n    \n    const url = window.location.toString().split('/');\n    console.log('url', url[3])\n    \n    useEffect(() => {\n        API.getJournal(url[3])\n           .then(res => {\n                console.log('no props res', res.data)\n                dispatch({\n                    ...state,\n                    _id: res.data._id,\n                    type: GALLERY_PROPS,\n                    journal: res.data.journal,\n                    uploaded: false\n                })\n           })\n           .catch(err => console.log('err', err))\n        }, [state.uploaded]);\n    \n    console.log('state', state);\n    \n    const handleLogOut = () => {\n        API.logout();\n    }\n        \n        return (\n            <div className=\"container blog\">\n                <div className=\"profile\">\n                    {props.loggedIn ?\n                        (<div>\n                            <h1>Hello {props.username}</h1>\n                            \n                        </div>) :\n                        (<div>\n                            <h2>{url[3]}'s blog</h2>\n                            \n                        </div>)\n                    }\n                    <Link to='gallery'>Gallery Page</Link>\n                    {props.loggedIn ?\n                        (<div>\n                            <p><Link to={''} onClick={handleLogOut}>Log out</Link></p>\n                        </div>) :\n                        (<div>\n                            <p><Link to=''>Sign in</Link></p>\n                            <p><Link to='/signup'>Sign up</Link></p>\n                        </div>)\n                    }\n                    <div>\n                        <Link to={''}>Home</Link>\n                    </div>\n                </div>\n                <div className=\"posts\">\n                    <NewPost />\n                    <Posts loggedIn={props.loggedIn} _id={props._id} />\n                </div>\n            </div>\n    )\n};\n\nexport default Blog;","import React, { useRef, useState } from 'react';\nimport { useUserContext } from '../utils/GlobalState'\nimport axios from 'axios';\nimport API from '../utils/API';\n\nconst Upload = () => {\n\n    const [state, dispatch] = useUserContext();\n\n    const [fileState, setFileState] = useState({\n        message: '',\n        file: '',\n        fileUrl: '',\n        url: ''\n    });\n\n    const [artState, setArtState] = useState({\n        title: '',\n        postBody: '',\n        tags: []\n    });\n    \n    // console.log('artState', artState)\n\n    const imgRef = useRef();\n    const titleRef = useRef();\n    const bodyRef = useRef();\n    const tagsRef = useRef();\n    const uploadedImg = useRef();\n\n    // console.log('uploadedImg', uploadedImg)\n\n    // dynamic host for putting/getting images to/from bucket\n    const host = window.location.host;\n    const protocol = window.location.protocol;\n    // console.log('host url', host)\n\n    const getImage = e => {\n        e.preventDefault();\n        const files = imgRef.current.files;\n        // console.log(files);\n        if (files && files.length > 0) {\n            const file = files[0];\n            setFileState({\n                ...fileState,\n                file,\n                fileUrl: URL.createObjectURL(e.target.files[0])\n            });\n        };\n    };\n\n    // console.log('img upload state:', fileState);\n\n    const uploadFile = e => {\n        e.preventDefault();\n        const { file } = fileState;\n        setFileState({ ...fileState, message: 'Uploading...' });\n        // console.log('file.type', file.type);\n        const contentType = file.type;\n\n        const generatePutUrl = `${protocol}//${host}/generate-put-url`;\n        // console.log('generatePutUrl', generatePutUrl)\n        const options = {\n            params: {\n                Key: `${state.username}/works/${Date.now()}_${file.name}`,\n                ContentType: contentType\n            },\n            headers: {\n                'Content-Type': contentType\n            }\n        };\n\n        axios.get(generatePutUrl, options)\n            .then(res => {\n                // console.log('res.data', res.data)\n                const { data } = res;\n                // console.log('put url from res.data', data);\n\n                axios.put(data, file, options)\n                    .then((res) => {\n                        // console.log('put file', res.config.params);\n                        setFileState({ ...fileState, message: 'Upload Successful' });\n\n                        const params = res.config.params;\n                        const generateGetUrl = `${protocol}//${host}/generate-put-url`\n                        const options = {params};\n\n                        axios.get(generateGetUrl, options)\n                            .then(res => {\n                                const { data } = res;\n                                const url = data.replace(/\\?.*/, '');\n                                // console.log('replace ? and key in url', url);\n                                setFileState({ ...fileState, url })\n\n                                handlePost(url);\n                            })\n                    })\n                    .catch(err => {\n                        setFileState({ ...fileState, message: 'Something went wrong, try again' });\n                        console.log('err', err);\n                    });\n            });\n    };\n\n    const handlePost = (url) => {\n        const { title, postBody, tags } = artState;\n        const { _id } = state;\n        console.log('_id in handlePost', _id)\n        const newArt = {\n            userId: _id,\n            url,\n            title,\n            postBody,\n            tags\n        };\n\n        API.postArt(newArt);\n        setFileState({\n            fileUrl: ''\n        })\n        dispatch({\n            ...state,\n            uploaded: true\n        })\n        // uploadedImg.current.src = '';\n        titleRef.current.value = '';\n        bodyRef.current.value = '';\n        tagsRef.current.value = '';\n    }\n\n    const handleChange = e => {\n        e.preventDefault();\n        const title = titleRef.current.value;\n        const postBody = bodyRef.current.value;\n        const tags = tagsRef.current.value.split(',');\n        const prettyTags = tags.map(tag => {\n            const trimTag = tag.trim();\n            const regex = /\\s+/g;\n            const underscoreTag = trimTag.replace(regex, '_');\n            return underscoreTag;\n        });\n\n        setArtState({\n            ...artState,\n            title,\n            postBody,\n            tags: prettyTags\n        })\n    }\n    \n    return (\n        <div>\n            <form>\n                <div>\n                    <label htmlFor=\"upload\">Choose an image</label>\n                    <input id=\"upload-file\" type=\"file\" name=\"upload\" accept=\"image/*\" onChange={getImage} ref={imgRef} />\n                </div>\n                <div className=\"upload-mess\">\n                    {fileState.message}\n                </div>\n                <div>\n                <label htmlFor=\"title\"> Title: </label>\n                    <input type=\"text\" name=\"title\" ref={titleRef} onChange={handleChange} />\n                </div>\n                <div>\n                <label htmlFor=\"body\">Description:</label>\n                    <textarea name=\"body\" ref={bodyRef} onChange={handleChange} />\n                </div>\n                <div>\n                <label htmlFor=\"tags\">Tags, separated by a comma:</label>\n                    <input type=\"text\" name=\"tags\" ref={tagsRef} onChange={handleChange} />\n                </div>\n                <div>\n                    <button onClick={uploadFile}>Submit</button>\n                </div>\n                {fileState.fileUrl ?\n                    (<div className=\"upload-prev\">\n                        <img src={fileState.fileUrl} alt=\"preview\" width=\"140px\" />\n                    </div>):\n                    (<h4>Preview...</h4>)}\n                \n                    \n                    \n            </form>\n        </div>\n    )\n}\n\nexport default Upload;","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst Tags = props => {\n    // console.log('tag props', props)\n    const { tags } = props;\n    return (\n        <Link to={{\n            pathname: 'gallery/' + tags,\n            state: {\n                works: props.works\n            }\n        }} key={tags}>{tags}</Link>\n        \n    )\n}\n\nexport default Tags;","import React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useUserContext } from '../utils/GlobalState';\nimport API from '../utils/API';\nimport Upload from './Upload';\nimport Tags from './Tags';\nimport { GALLERY_PROPS } from '../utils/actions';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nconst Gallery = props => {\n    const [state, dispatch] = useUserContext();\n    const [worksState, setWorksState] = useState({ works: [] });\n    // const [post, setPost] = useState({});\n    const pathId = window.location.pathname.split('/')\n\n    console.log('worksState', worksState)\n    console.log('props', props)\n\n    useEffect(() => {\n        // console.log('props', props._id)\n        API.getUser(pathId[1])\n            .then(res => {\n                console.log('gallery get res', res.data)\n                setWorksState({\n                    works: res.data.works\n                });\n                dispatch({\n                    ...state,\n                    type: GALLERY_PROPS,\n                    username: res.data.username,\n                    _id: res.data._id,\n                    uploaded: false\n                })\n             })\n    }, [state.uploaded])\n\n    const handleDelete = (id) => {\n        API.deleteArt(id)\n        dispatch({\n            ...state,\n            uploaded: true\n        })\n    }\n    \n    const { works } = worksState;\n    console.log('works in gallery', works)\n\n    const handleLogOut = () => {\n        API.logout();\n    }\n\n    const folioTag = 'portfolio';\n\n    if (!works || !works.length) {\n        return (\n            <div className=\"gallery-box\">\n            <div className=\"profile\">\n                <h1>Welcome to Xfolio: {props.username}</h1>\n            {props.loggedIn ?\n                (<Upload />) :\n                (<div>\n                    <h2>{pathId[1]}'s gallery</h2>\n                </div>)\n            }\n            <Link to={'blog'}>Blog Page</Link>\n                {props.loggedIn ?\n                    (<div>\n                        <p><Link to='' onClick={handleLogOut}>Log out</Link></p>\n                    </div>):\n                    (<div>\n                        <p><Link to=''>Sign in</Link></p>\n                        <p><Link to='/signup'>Sign up</Link></p>\n                    </div>)\n                    }\n                    <div>\n                        <Link to={''}>Home</Link>\n                    </div>\n            </div>\n            <div className=\"gallery\">\n                <h3>No posts yet!</h3>\n            </div>\n            </div>\n\n        )\n    } else {\n        return (\n          <div className=\"gallery-box\">\n                <div className =\"profile\">\n\n                    <h1>Welcome to Xfolio: {props.username}</h1>\n                    {props.loggedIn ?\n                        (<Upload />) :\n                        (<div>\n                            <h2>{pathId[1]}'s gallery</h2>\n                        </div>)}\n                    <Link to={'blog'}>Blog Page</Link>\n                    <Link to={{\n                        pathname: `gallery/${folioTag}`,\n                        state: { works: works }\n                    }}>Portfolio</Link>\n                    {props.loggedIn ?\n                        (<p><Link to='' onClick={handleLogOut}>Log out</Link></p>) :\n                        (<p><Link to=''>Log in</Link></p>)\n                    }\n                    <div>\n                        <Link to={''}>Home</Link>\n                    </div>\n                </div>\n                <div className=\"gallery\">\n                {works.map(post => (\n                    <div className=\"gall\" key={post._id}>\n                        <div className=\"gall-thumb\">\n                            <Link to={{\n                                pathname: 'gallery/work/' + post._id,\n                                state: {\n                                    postId: post._id,\n                                    postTitle: post.title,\n                                    postImg: post.img,\n                                    postDesc: post.description,\n                                    postTags: post.tags\n                                }\n                            }}>\n                                <img src={post.img} alt={post.title} />\n                            </Link>\n                        </div>\n                       \n                        <div className=\"gall-info\">\n                        <div className=\"gall-title\">\n                            {post.title}     \n                        </div>\n                        <div className=\"gall-descrip\">\n                            {post.description}\n                        </div>\n                            <div className=\"gall-tags\">\n                                {post.tags.map(tag => (\n                                    <span key={tag}><Tags works={works} tags={tag} /> </span>\n                                ))}\n                        </div> \n                            {props.loggedIn ? (\n                                <div>\n                                <button className=\"del-butt\" onClick={() => handleDelete(post._id)}>\n                                    <FontAwesomeIcon icon=\"trash\" />\n                                    </button>\n                                    <Link to={{\n                                        pathname: 'gallery/update/' + post._id,\n                                        state: {\n                                            ...post\n                                        }\n                                    }}>\n                                    {/* <i className=\"edit-butt\"> */}\n                                        <FontAwesomeIcon icon=\"pencil-alt\" />\n                                    {/* </i> */}\n                                </Link>\n                                </div>) :\n                                (<span></span>)}\n                        \n                        </div>\n                    </div>\n\n                    ))}\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Gallery;","import React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom'\nimport API from '../utils/API';\n\nconst SinglePost = props => {\n    const post = props.location.state\n\n    // console.log('post props in SinglePost', post)\n\n    return (\n        <div className=\"single-post\">\n            <Link to={{pathname: '../blog'}}>Back to blog</Link>\n            {post ? (\n                <div>\n                    <div className=\"post-title\">\n                        <h1>{post.title}</h1>\n                    </div>\n                    <div className=\"post-body\">\n                        <p>{post.body}</p>\n                    </div>\n                    <div className=\"post-tags\">{post.tags.map(tag => (\n                        <span key={tag}>{tag} </span>\n                    ))}\n                    </div>\n                </div>) : (<h3>Loading...</h3>)}\n           \n        </div>\n    )\n}\n\nexport default SinglePost;","import React, { useEffect } from 'react';\nimport { Link } from 'react-router-dom';\n\nconst FilteredArt = props => {\n    console.log('props in FilteredArt', props.location.state.works)\n\n    const mapTags = props.location.state.works.map(post => {\n        return post.tags\n    })\n\n    \n    const tags = []\n    mapTags.filter(tag => {\n        for (let i = 0; i < tag.length; i++) {\n            if (tag[i] === props.match.params.tag) {\n                tags.push(tag)\n            }\n        }\n    })\n    \n    console.log('filtered tags', tags)\n\n    const posts = props.location.state.works.filter(post => {\n        console.log('post in posts filter', post)\n        for (let res of tags) {\n            if (post.tags === res) {\n                return post\n            }\n        }        \n    })\n\n    console.log(\"posts if they match???\", posts)\n    // console.log('state in FilteredArt', state)\n\n    if (!posts.length) { \n        return (\n            <div className=\"gallery-box\">\n            <div className=\"profile\">\n                <h2>Here's all artworks tagged '{props.match.params.tag}'</h2>\n                <div>\n                    <p><Link to={'../../' + props.match.params.username + '/gallery'}>Go back</Link></p>\n                </div>\n            </div>\n            <div className=\"gallery\">\n                <h1>No posts tagged '{props.match.params.tag}' yet</h1>\n            </div>\n            </div>\n        )\n    } else {\n        return (\n            <div className=\"gallery-box\">\n                <div className=\"profile\">\n                    <h2>Here's all artworks tagged '{props.match.params.tag}'</h2>\n                    <div>\n                        <p><Link to={'../../' + props.match.params.username + '/gallery'}>Go back</Link></p>\n                    </div>\n                </div>\n                <div className=\"gallery\">\n                    {posts.map(post => (\n                        <div key={post._id} className=\"gall\">\n                            <div className=\"gall-thumb\">\n                                <Link to={{\n                                    pathname: 'work/' + post._id,\n                                    state: {\n                                        postId: post._id,\n                                        postTitle: post.title,\n                                        postImg: post.img,\n                                        postDesc: post.description,\n                                        postTags: post.tags\n                                    }\n                                }}>\n                                    <img src={post.img} alt={post.title} />\n                                </Link>\n                            </div>\n                            <div>\n                                <h2><i>{post.title}</i></h2>\n                            </div>\n                            <div>\n                                {post.description}\n                            </div>\n                            <div className=\"gall-tags\">\n                                {post.tags}\n                            </div>\n                        </div>\n                    ))}\n                </div>\n            </div>\n        \n        )\n    }\n}\n\nexport default FilteredArt;","import React, { useRef, useState } from 'react';\r\nimport API from '../utils/API';\r\n\r\nconst UpdateArt = ({location, match}) => {\r\n    console.log('props.location in UpdateArt', location)\r\n    console.log('props.match in UpdateArt', match)\r\n    const [update, setUpdate] = useState();\r\n    const { state } = location;\r\n    const { params } = match;\r\n\r\n    const titleRef = useRef();\r\n    const bodyRef = useRef();\r\n    const tagsRef = useRef();\r\n\r\n    const handleChange = () => {\r\n        // console.log('formRef', bodyRef.current.value)\r\n        setUpdate({\r\n            title: titleRef.current.value,\r\n            description: bodyRef.current.value,\r\n            tags: tagsRef.current.value.split(',')\r\n        })\r\n    }\r\n\r\n    console.log('update state', update)\r\n    const handleUpdate = (e) => {\r\n        e.preventDefault();\r\n        API.updateArt(params.id, update)\r\n            \r\n        window.location.assign('/' + params.username + '/gallery')\r\n        \r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <form onChange={handleChange}>\r\n                <div>\r\n                <img src={state.img} alt={state.title} />\r\n                </div>\r\n                <div>\r\n                    <input type=\"text\" defaultValue={state.title} ref={titleRef} />\r\n                </div>\r\n                <div>\r\n                    <textarea defaultValue={state.description} ref={bodyRef} />\r\n                </div>\r\n                <div>\r\n                    <input type=\"text\" defaultValue={state.tags} ref={tagsRef} />\r\n                </div>\r\n                <div>\r\n                    <button onClick={handleUpdate}>Save</button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UpdateArt;","import React, { useRef, useState } from 'react';\r\nimport API from '../utils/API';\r\n\r\nconst UpdateBlog = props => {\r\n\r\n    const [post, setPost] = useState();\r\n\r\n    const titleRef = useRef();\r\n    const bodyRef = useRef();\r\n    const tagsRef = useRef();\r\n\r\n    console.log('props in UpdateBlog', props)\r\n\r\n    const handleChange = () => {\r\n        setPost({\r\n            title: titleRef.current.value,\r\n            body: bodyRef.current.value,\r\n            tags: tagsRef.current.value\r\n        })\r\n    }\r\n\r\n    const handleUpdate = e => {\r\n        e.preventDefault();\r\n        API.updateJournal(props.match.params.id, post);\r\n        window.location.assign(`../../../${props.match.params.username}/blog`)\r\n    }\r\n\r\n    console.log('state in updateblog', post)\r\n    return (\r\n        <div>\r\n            <div>\r\n                <h1>update ya blog!</h1>\r\n            </div>\r\n            <div>\r\n                <form onChange={handleChange}>\r\n                    <div>\r\n                        <input type=\"text\" defaultValue={props.location.state.title} ref={titleRef} />\r\n                    </div>\r\n                    <div>\r\n                        <textarea defaultValue={props.location.state.body} ref={bodyRef} />\r\n                    </div>\r\n                    <div>\r\n                        <input type=\"text\" defaultValue={props.location.state.tags} ref={tagsRef} />\r\n                    </div>\r\n                    <div>\r\n                        <button onClick={handleUpdate}>Submit</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UpdateBlog;","import React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\nimport { UserProvider } from './utils/GlobalState'\nimport Container from './components/Container';\nimport Login from './components/Login';\nimport Signup from './components/Signup';\nimport ArtWork from './components/ArtWork';\nimport Blog from './components/Blog';\nimport Gallery from './components/Gallery'\nimport SinglePost from './components/SinglePost'\nimport FilteredArt from './components/FilteredArt'\nimport UpdateArt from './components/UpdateArt'\nimport UpdateBlog from './components/UpdateBlog';\nimport API from './utils/API';\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { faTrash, faPencilAlt } from '@fortawesome/free-solid-svg-icons'\n\nlibrary.add(faTrash, faPencilAlt);\n\n\nconst App = () => {  \n\n  const [isLoggedIn, setIsLoggedIn] = useState({\n    loggedIn: false,\n    username: '',\n    _id: ''\n  });\n\n  console.log('isLoggedIn state', isLoggedIn)\n\n  useEffect(() => {\n    API.status()\n      .then(res => {\n          console.log('res in App.js useEffect', res.data)\n          setIsLoggedIn({\n            loggedIn: true,\n            username: res.data.user[0].username,\n            _id: res.data.user[0]._id\n          });\n      })\n      .catch(e => {\n        console.log('error', e)\n      })\n  }, [])\n  \n  \n  const { loggedIn, username, _id } = isLoggedIn;\n  // if (loggedIn) {\n  //   return window.location.assign(`/${username}/gallery`)\n  // }\n  return (\n  <UserProvider>\n    <Router>\n      <Container loggedIn={loggedIn}>\n        <Switch>\n            <Route exact path={['/', '/login']}>\n              <Login loggedIn={loggedIn} username={username} id={_id} />\n            </Route>\n          <Route exact path='/signup' component={Signup} />\n          <Route exact path='/:username/blog'>\n            <Blog loggedIn={loggedIn} username={username} _id={_id} />\n          </Route>\n          <Route exact path='/:username/blog/:id' component={SinglePost} />\n            <Route exact path='/:username/gallery/work/:id' component={ArtWork} />\n            <Route exact path='/:username/gallery/:tag' component={FilteredArt} />\n          <Route exact path='/:username/gallery'>\n            <Gallery loggedIn={loggedIn} username={username} />\n            </Route>\n          <Route exact path='/:username/blog/update/:id' component={UpdateBlog} />\n          <Route exact path='/:username/gallery/update/:id' component={UpdateArt} />\n        </Switch>\n      </Container>\n    </Router>\n  </UserProvider>\n  )\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}