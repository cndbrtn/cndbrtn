{"version":3,"sources":["utils/actions.js","utils/GlobalState.js","components/Container.js","utils/API.js","components/Login.js","components/Signup.js","components/ArtWork.js","components/Post.js","components/NewPost.js","components/Blog.js","components/Upload.js","components/Tags.js","components/Gallery.js","components/SinglePost.js","components/FilteredArt.js","App.js","serviceWorker.js","index.js"],"names":["UserContext","createContext","Provider","reducer","state","action","type","console","log","_id","username","postId","postImg","postTitle","postDesc","postTags","password","initialState","nickname","journal","works","favorites","uploaded","UserProvider","value","props","useReducer","dispatch","useUserContext","useContext","Container","children","className","loggedIn","axios","get","newUser","post","email","login","newArt","id","delete","newPost","granimColor","gradients","transitionSpeed","granimImg","source","blendingMode","Login","useState","setState","nameRef","useRef","passRef","handleChange","current","name","placeholder","onChange","ref","onClick","e","preventDefault","API","then","user","data","window","location","assign","catch","err","to","isPausedWhenNotInView","image","states","Signup","signUp","setSignUp","emailRef","ArtWork","match","art","setArt","pathId","pathname","split","params","useEffect","filter","img","title","description","tags","map","tag","key","src","alt","Posts","length","body","NewPost","postState","setPostState","titleRef","bodyRef","tagsRef","trim","replace","htmlFor","userId","Blog","url","toString","res","Post","Upload","message","file","fileState","setFileState","postBody","artState","setArtState","imgRef","uploadedImg","host","handlePost","prettyTags","accept","files","reader","FileReader","onload","target","result","readAsDataURL","contentType","generatePutUrl","options","Key","Date","now","ContentType","headers","put","config","generateGetUrl","width","Tags","Gallery","worksState","setWorksState","postDetail","handlePostDetail","handleDelete","icon","SinglePost","setPost","FilteredArt","mapTags","i","push","posts","library","add","faTrash","faPencilAlt","App","isLoggedIn","setIsLoggedIn","exact","path","component","Boolean","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.ba6ecf3b.chunk.js","sourcesContent":["export const ADD_JOURNAL_POST = 'ADD_JOURNAL_POST';\nexport const UPDATE_JOURNAL = 'UPDATE_JOURNAL';\nexport const REMOVE_JOURNAL_POST = 'REMOVE_JOURNAL_POST';\nexport const SET_CURRENT_POST = 'SET_CURRENT_POST';\n // artwork actions\nexport const ADD_ARTWORK = 'ADD_ARTWORK';\nexport const UPDATE_ARTWORK = 'UPDATE_ARTWORK';\nexport const REMOVE_ARTWORK = 'REMOVE_ARTWORK';\nexport const SET_CURRENT_ARTWORK = 'SET_CURRENT_ARTWORK';\n // user actions\nexport const LOGIN_USER = 'LOGIN_USER';\nexport const ADD_USER = 'ADD_USER';\nexport const UPDATE_USER = 'UPDATE_USER';\nexport const REMOVE_USER = 'REMOVE_USER';\nexport const SET_CURRENT_USER = 'SET_CURRENT_USER';\nexport const GET_CURRENT_USER = 'GET_CURRENT_USER';\n // favoriting actions\nexport const ADD_FAVE = 'ADD_FAVE';\nexport const REMOVE_FAVE = 'REMOVE_FAVE';\nexport const UPDATE_CURRENT_FAVE = 'UPDATE_CURRENT_FAVE';\n\nexport const GALLERY_PROPS = 'GALLERY_PROPS';\nexport const POST_PROPS = 'POST_PROPS'\n\n","import React, { createContext, useReducer, useContext } from 'react';\n\nimport { SET_CURRENT_USER, LOGIN_USER, ADD_USER, GALLERY_PROPS } from './actions';\n\nconst UserContext = createContext();\nconst { Provider } = UserContext;\n\nconst reducer = (state, action) => {\n    // console.log('action object', action.type) // console logs the action object with all the info I need to store\n    // const { type, _id, username, nickname, journal, works, favorites, password } = action;\n    switch (action.type) {\n        case SET_CURRENT_USER:\n            console.log('action inside SET CURRENT', action);\n            return {\n                ...state,\n                type: action.type,\n                _id: action._id,\n                username: action.username,\n                postId: action.postId,\n                postImg: action.postImg,\n                postTitle: action.postTitle,\n                postDesc: action.postDesc,\n                postTags: action.postTags,\n                password: '',\n\n            }\n        case LOGIN_USER:\n            return {\n                ...action\n            };\n        case ADD_USER: \n            return {\n                ...action\n            };\n        case GALLERY_PROPS:\n            return {\n                ...state,\n                ...action            }\n        default:\n            return state;\n    }\n};\n\nlet initialState = {\n    type: '',\n    _id: '0',\n    username: '',\n    nickname: '',\n    journal: [],\n    works: [],\n    favorites: [],\n    password: '',\n    uploaded: false,\n    postId: '',\n    postImg: '',\n    postTitle: '',\n    postDesc: '',\n    postTags: []\n    // loggedIn: false\n};\n\nconst UserProvider = ({ value = [], ...props }) => {\n    const [state, dispatch] = useReducer(reducer, initialState);\n    // console.log('UserProvider props', props);\n    return <Provider value={[state, dispatch]} {...props} />\n};\n\nconst useUserContext = () => {\n    return useContext(UserContext);\n};\n\nexport { UserProvider, useUserContext };","import React from 'react';\n\n\nconst Container = (props) => {\n    console.log('props.children', props.children)\n    return (\n        <div className=\"router-container\">\n            {props.children} {props.loggedIn}\n        </div>\n    )\n};\n\nexport default Container;\n\n","import axios from 'axios';\n\nexport default {\n    // getUsers: function () {\n    //     return axios.get('/api/user');\n    // },\n    getUser: function (username) {\n        // console.log(username)\n        return axios.get('/api/user/' + username)\n    },\n    registerUser: function (newUser) {\n        return axios.post('/api/user', {\n            username: newUser.username,\n            password: newUser.password,\n            email: newUser.email\n        })\n    },\n    login: function (login) {\n        return axios.post('/api/user/login', {\n            username: login.username,\n            password: login.password\n        })\n    },\n    logout: function () {\n        return axios.post(\"/api/user/logout\");\n    },\n    status: function () {\n        return axios.get('/api/user');\n    },\n    postArt: (newArt) => {\n        return axios.post('/api/artwork', newArt);\n    },\n    getArt: (username) => {\n        return axios.get('/api/artwork/' + username)\n    },\n    updateArt: (id) => {\n        return axios.put('/api/artwork/' + id)\n    },\n    deleteArt: (id) => {\n        return axios.delete('/api/artwork/' + id)\n    },\n    postJournal: (newPost) => {\n        return axios.post('/api/blog', newPost);\n    },\n    getJournal: (username) => {\n        return axios.get('/api/blog/' + username)\n    },\n    updateJournal: (id) => {\n        return axios.put('/api/blog/' + id)\n    },\n    deleteJournal: (id) => {\n        return axios.delete('/api/blog/' + id)\n    }\n}","import React, { useRef, useState } from 'react';\nimport API from '../utils/API'\nimport Granim from 'react-granim';\nimport { Link } from 'react-router-dom';\n\n\n// initialize granim\nconst granimColor = ({   \"default-state\": {\n    gradients: [\n        ['#29323c', '#485563'],\n        ['#FF6B6B', '#556270'],\n        ['#80d3fe', '#7ea0c4'],\n        ['#f0ab51', '#eceba3']\n    ],\n    transitionSpeed: 7000}});\n\n// set granim image\nconst granimImg = ({source: '../images/bg.jpeg', blendingMode: 'multiply'});\n\n// login component\nconst Login = () => {\n    // setting up our state\n    const [state, setState] = useState({\n        username: '',\n        password: ''\n    });\n\n    // our element references\n    const nameRef = useRef();\n    const passRef = useRef();\n\n    // handle input change function\n    const handleChange = () => {\n        // variables to dispatch\n        const username = nameRef.current.value;\n        const password = passRef.current.value;\n        // const type = LOGIN_USER;\n\n        // dispatch to our global state\n        setState({\n            // ...state,\n            // type,\n            username,\n            password\n        })\n    };\n    console.log('state', state);\n\n    // posts user data to the api to validate against the database\n    const handleLogin = (e) => {\n        e.preventDefault();\n        const login = {\n            username: state.username,\n            password: state.password\n        }\n        console.log('components/Login.js login', login)\n        API.login(login)\n            .then((user) => {\n                console.log('Login.js api.login() result', user.data.username);\n                window.location.assign(`/${user.data.username}/gallery`);\n            }).catch(err => console.log(err));\n    };\n\n    return (\n        <div className=\"login-page\">\n            <div className=\"container login\">\n                <div>\n                    <form>\n                        <div>\n                            <input type=\"text\" name=\"username\" placeholder=\"Username\" onChange={handleChange} ref={nameRef} />\n                    </div>\n                    <div>\n                        <input type=\"password\" name=\"password\" placeholder=\"password\" onChange={handleChange} ref={passRef} />\n                        </div>\n                        <div>\n                            <button name=\"login\" onClick={handleLogin}>sign in</button>\n                        </div>\n                    </form>\n                </div>\n                <Link to=\"/Signup\"><p>New to Xfolio? Sign up here</p></Link>\n            </div>\n          <Granim isPausedWhenNotInView =\"true\" image= {granimImg} states = {granimColor} id=\"canvas-image\" />\n       </div>\n    )\n}\n\nexport default Login;","import React, { useRef, useState } from 'react';\nimport { useUserContext } from '../utils/GlobalState'\nimport API from '../utils/API'\nimport { SET_CURRENT_USER, ADD_USER } from '../utils/actions';\nimport Granim from 'react-granim';\nimport { Link } from 'react-router-dom';\n\n\nconst granimColor = ({   \"default-state\": {\n    gradients: [\n        ['#e5ff00', '#485563'],\n        ['#FF6B6B', '#556270'],\n        ['#80d3fe', '#7ea0c4'],\n        ['#f0ab51', '#eceba3']\n    ],\n    transitionSpeed: 7000}});\n    \nconst granimImg = ({source: '../images/bg.jpeg', blendingMode: 'multiply'});\n\n\nconst Signup = () => {\n\n    const [state, dispatch] = useUserContext();\n    const [signUp, setSignUp] = useState({});\n\n    // const [userLogin, setUserLogin] = useState();\n\n    console.log(\"state\", state);\n\n    const emailRef = useRef();\n    const nameRef = useRef();\n    const passRef = useRef();\n\n    const handleChange = () => {\n        const email = emailRef.current.value;\n        const username = nameRef.current.value;\n        const password = passRef.current.value;\n\n        setSignUp({\n            // type: ADD_USER,\n            username: username,\n            password: password,\n            email: email\n        })\n\n        // setState\n        // console.log('state after login', state)\n    }\n\n    const handleSignup = (e) => {\n        e.preventDefault();\n        const newUser = {\n            email: signUp.email,\n            username: signUp.username,\n            password: signUp.password\n        }\n        console.log('components/Signup.js sign up', newUser)\n        API.registerUser(newUser)\n            .then((user) => {\n                console.log('Signup.js api.signup() result', user.data);\n                // const userData = user.data;\n                // setSignUp({\n                //     _id: userData._id,\n                //     username: userData.username\n                // })\n                \n                API.login({ username: signUp.username, password: signUp.password })\n                    .then(user => {\n                        console.log('user data after post to api/login from signup', user.data)\n                        dispatch({\n                            ...state,\n                            type: SET_CURRENT_USER,\n                            username: user.data.username,\n                            _id: user.data._id,\n                            // loggedIn: true\n                    })\n                })\n                    window.location.assign(`${signUp.username}/gallery`)\n            })\n                .catch(err => {\n                    if (err) console.log('components/Signup.js error', err);\n                })\n        }\n\n    return (\n        <div className=\"signup-page\">\n            <div className=\"container login signup\">\n                <div>\n                    <form>\n                        <div>\n                            <p>Sign up:</p>\n                            <input type=\"text\" name=\"email\" placeholder=\"email\" onChange={handleChange} ref={emailRef} />\n                    </div>\n                        <div>\n                            <input type=\"text\" name=\"username\" placeholder=\"Username\" onChange={handleChange} ref={nameRef} />\n                    </div>\n                    <div>\n                        <input type=\"password\" name=\"password\" placeholder=\"password\" onChange={handleChange} ref={passRef} />\n                        </div>\n                        <div>\n                            <button name=\"signup\" onClick={handleSignup}>sign up</button>\n                            <br />\n                        </div>\n                    </form>\n                </div>\n                <Link to=\"/Login\"><p>Already have an account? Log in here</p></Link>\n            </div>\n          <Granim isPausedWhenNotInView =\"true\" image= {granimImg} states = {granimColor} id=\"canvas-image\" />\n       </div>\n    )\n}\n\nexport default Signup;","import React, { useEffect, useState } from 'react';\n// import { useUserContext } from '../utils/GlobalState';\nimport API from '../utils/API';\n// import { SET_CURRENT_USER } from '../utils/actions';\nimport { SET_CURRENT_USER } from '../utils/actions';\nimport { Link } from 'react-router-dom';\n\n\nconst ArtWork = ({ match }) => {\n\n    const [art, setArt] = useState();\n\n    const pathId = window.location.pathname.split('/')\n    console.log(pathId)\n    const { params } = match;\n    console.log('props.match', params)\n\n    useEffect(() => {\n        API.getArt(params.username)\n            .then(works => {\n                const art = works.data.works\n                console.log('works in detail', works.data.works)\n                art.filter(post => {\n                    // console.log(post._id)\n                    if (post._id === params.id) {\n                        setArt({\n                            // ...state,\n                            // type: SET_CURRENT_USER,\n                            user: post.user,\n                            postId: post._id,\n                            postImg: post.img,\n                            postTitle: post.title,\n                            postDesc: post.description,\n                            postTags: post.tags\n                        })\n                    }\n                })\n        })\n    }, [])\n\n    console.log('state in detail', art)\n    return (\n        <div className=\"detail\">\n            {art ? (\n                <div className=\"full-info\">\n                <div><h1>{art.postTitle}</h1></div>\n                <div>{art.postDesc}</div>\n                <div className=\"tags\"><p>Tagged: {art.postTags.map(tag => (\n                    <span key={tag}>{tag} </span>\n                ))}\n                    </p>\n                    </div>\n                <div className=\"full-image\">\n                    <img className=\"full-image\" src={art.postImg} alt={art.postTitle} />\n                </div>\n                    </div>\n        ) : (<h3>Loading...</h3>)}\n        </div >\n    )\n}\n\nexport default ArtWork;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { useUserContext } from '../utils/GlobalState';\nimport API from '../utils/API';\n\nconst Posts = () => {\n    const [state] = useUserContext();\n\n    // const url = window.location.toString().split('/');\n\n    const { journal } = state;\n    if (!journal.length) {\n        return (\n            <div>\n                <h3>You don't have any posts yet</h3>\n            </div>\n        )\n    } else {\n        return (\n            <div>\n                {journal.map(post => (\n                    <div key={post._id} className='postbox'>\n                        <Link to={'blog/' + post._id}>\n                        <h2>{post.title}</h2>\n                        </Link>\n                        <div>\n                            {post.body}\n                        </div>\n                        <div className=\"tags\">\n                            {post.tags}\n                        </div>\n                    </div>\n                ))}\n            </div>\n        )\n    }\n}\n\nexport default Posts;","import React, { useRef, useState } from 'react';\nimport { useUserContext } from '../utils/GlobalState';\nimport API from '../utils/API';\nimport { GALLERY_PROPS } from '../utils/actions';\n\nconst NewPost = () => {\n    const [state, dispatch] = useUserContext();\n    const [postState, setPostState] = useState();\n\n    const titleRef = useRef();\n    const bodyRef = useRef();\n    const tagsRef = useRef();\n\n    const handleChange = e => {\n        e.preventDefault();\n        \n        const title = titleRef.current.value;\n        const body = bodyRef.current.value;\n        const tags = tagsRef.current.value.split(',');\n        const tag = tags.map(tag => {\n            const trimTag = tag.trim();\n            const regex = /\\s+/g;\n            const underscoreTag = trimTag.replace(regex, '_')\n            return underscoreTag;\n        })\n        \n        console.log({ title: title, body: body, tags: [tag] })\n        setPostState({\n            title,\n            body,\n            tags: tag\n        })\n    };\n\n    const handleSubmit = e => {\n        e.preventDefault();\n\n        const { title, body, tags } = postState;\n        const { _id } = state;\n        const newPost = {\n            userId: _id,\n            title,\n            body,\n            tags\n        };\n\n        API.postJournal(newPost)\n            // .then(post => {\n                // console.log('new post in NewPost.js result', post)\n                dispatch({\n                    ...state,\n                    type: GALLERY_PROPS,\n                    uploaded: true,\n                    // journal: post.data.journal\n                }\n               )\n        //    })\n    }\n\n    console.log('postState', postState);\n\n    return (\n        <div>\n            <form onChange={handleChange}>\n                <div>\n                <label htmlFor=\"title\">Title:</label>\n                    <input type=\"text\" name=\"title\" ref={titleRef} />\n                </div>\n                <div>\n                <label htmlFor=\"body\">Post:</label>\n                    <textarea name=\"body\" ref={bodyRef} />\n                </div>\n                <div>\n                <label htmlFor=\"tags\">Tags, separated by a comma:</label>\n                    <input type=\"text\" name=\"tags\" ref={tagsRef} />\n                </div>\n                <div>\n                    <button name=\"submit\" onClick={handleSubmit}>Submit Post</button>\n                </div>\n            </form>\n        </div>\n    )\n}\n\nexport default NewPost;","import React, { useEffect } from 'react';\nimport { useUserContext } from '../utils/GlobalState';\nimport { Link, useHistory } from 'react-router-dom';\nimport axios from 'axios';\nimport Posts from './Post';\nimport NewPost from './NewPost';\nimport { GALLERY_PROPS } from '../utils/actions';\nimport API from '../utils/API'\n\nconst Blog = (props) => {\n    const [state, dispatch] = useUserContext();\n    console.log('props in blog', props)\n    // console.log()\n    \n    const url = window.location.toString().split('/');\n    console.log('url', url[3])\n    \n    useEffect(() => {\n        API.getJournal(url[3])\n           .then(res => {\n                console.log('no props res', res.data)\n                dispatch({\n                    ...state,\n                    _id: res.data._id,\n                    type: GALLERY_PROPS,\n                    journal: res.data.journal,\n                    uploaded: false\n                })\n           })\n           .catch(err => console.log('err', err))\n        }, [state.uploaded]);\n    \n        console.log('state', state);\n        \n        return (\n            <div className=\"container blog\">\n                <div className=\"profile\">\n                    <h1>Hello {props.username}</h1>\n                    <NewPost />\n                    <Link to='gallery'>Gallery Page</Link>\n                </div>\n                <div className=\"posts\">\n                    <Posts />\n                </div>\n            </div>\n    )\n};\n\nexport default Blog;","import React, { useRef, useState } from 'react';\nimport { useUserContext } from '../utils/GlobalState'\nimport axios from 'axios';\nimport API from '../utils/API';\n\nconst Upload = () => {\n\n    const [state, dispatch] = useUserContext();\n\n    const [fileState, setFileState] = useState({\n        message: '',\n        file: '',\n        url: ''\n    });\n\n    const [artState, setArtState] = useState({\n        title: '',\n        postBody: '',\n        tags: []\n    });\n    \n    // console.log('artState', artState)\n\n    const imgRef = useRef();\n    const titleRef = useRef();\n    const bodyRef = useRef();\n    const tagsRef = useRef();\n    const uploadedImg = useRef();\n\n    console.log('uploadedImg', uploadedImg)\n\n    // dynamic host for putting/getting images to/from bucket\n    const host = window.location.host;\n    // console.log('host url', host)\n\n    const getImage = e => {\n        e.preventDefault();\n        const files = imgRef.current.files;\n        // console.log(files);\n        if (files && files.length > 0) {\n            const file = files[0];\n            setFileState({ ...fileState, file });\n            const reader = new FileReader();\n            const { current } = uploadedImg;\n            current.file = file;\n            reader.onload = e => {\n                console.log(e.target.result)\n                current.src = e.target.result;\n            };\n            reader.readAsDataURL(file);\n        };\n    };\n\n    // console.log('img upload state:', fileState);\n\n    const uploadFile = e => {\n        e.preventDefault();\n        const { file } = fileState;\n        setFileState({ ...fileState, message: 'Uploading...' });\n        // console.log('file.type', file.type);\n        const contentType = file.type;\n\n        const generatePutUrl = `http://${host}/generate-put-url`;\n        // console.log('generatePutUrl', generatePutUrl)\n        const options = {\n            params: {\n                Key: `${state.username}/works/${Date.now()}_${file.name}`,\n                ContentType: contentType\n            },\n            headers: {\n                'Content-Type': contentType\n            }\n        };\n\n        axios.get(generatePutUrl, options)\n            .then(res => {\n                // console.log('res.data', res.data)\n                const { data } = res;\n                // console.log('put url from res.data', data);\n\n                axios.put(data, file, options)\n                    .then((res) => {\n                        console.log('put file', res.config.params);\n                        setFileState({ ...fileState, message: 'Upload Successful' });\n\n                        const params = res.config.params;\n                        const generateGetUrl = `http://${host}/generate-put-url`\n                        const options = {params};\n\n                        axios.get(generateGetUrl, options)\n                            .then(res => {\n                                const { data } = res;\n                                const url = data.replace(/\\?.*/, '');\n                                console.log('replace ? and key in url', url);\n                                setFileState({ ...fileState, url })\n\n                                handlePost(url);\n                            })\n                    })\n                    .catch(err => {\n                        setFileState({ ...fileState, message: 'Something went wrong, try again' });\n                        console.log('err', err);\n                    });\n            });\n    };\n\n    const handlePost = (url) => {\n        const { title, postBody, tags } = artState;\n        const { _id } = state;\n        console.log('_id in handlePost', _id)\n        const newArt = {\n            userId: _id,\n            url,\n            title,\n            postBody,\n            tags\n        };\n\n        API.postArt(newArt);\n        dispatch({\n            ...state,\n            uploaded: true\n        })\n        uploadedImg.current.src = '';\n        titleRef.current.value = '';\n        bodyRef.current.value = '';\n        tagsRef.current.value = '';\n    }\n\n    const handleChange = e => {\n        e.preventDefault();\n        const title = titleRef.current.value;\n        const postBody = bodyRef.current.value;\n        const tags = tagsRef.current.value.split(',');\n        const prettyTags = tags.map(tag => {\n            const trimTag = tag.trim();\n            const regex = /\\s+/g;\n            const underscoreTag = trimTag.replace(regex, '_');\n            return underscoreTag;\n        });\n\n        setArtState({\n            ...artState,\n            title,\n            postBody,\n            tags: prettyTags\n        })\n    }\n    \n    return (\n        <div>\n            <form>\n                <div>\n                    <label htmlFor=\"upload\">Choose an image</label>\n                    <input id=\"upload-file\" type=\"file\" name=\"upload\" accept=\"image/*\" onChange={getImage} ref={imgRef} />\n                </div>\n                <div className=\"upload-mess\">\n                    {fileState.message}\n                </div>\n                <div>\n                <label htmlFor=\"title\"> Title: </label>\n                    <input type=\"text\" name=\"title\" ref={titleRef} onChange={handleChange} />\n                </div>\n                <div>\n                <label htmlFor=\"body\">Description:</label>\n                    <textarea name=\"body\" ref={bodyRef} onChange={handleChange} />\n                </div>\n                <div>\n                <label htmlFor=\"tags\">Tags, separated by a comma:</label>\n                    <input type=\"text\" name=\"tags\" ref={tagsRef} onChange={handleChange} />\n                </div>\n                <div>\n                    <button onClick={uploadFile}>Submit</button>\n                </div>\n                    <div className=\"upload-prev\">\n                        <img ref={uploadedImg} alt=\"preview\" width=\"140px\" />\n                    </div>\n            </form>\n        </div>\n    )\n}\n\nexport default Upload;","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst Tags = props => {\n    console.log('tag props', props)\n    const { tags } = props;\n    return (\n        <Link to={{\n            pathname: 'gallery/' + tags,\n            state: {\n                works: props.works\n            }\n        }} key={tags}>{tags}</Link>\n        \n    )\n}\n\nexport default Tags;","import React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useUserContext } from '../utils/GlobalState';\nimport API from '../utils/API';\nimport Upload from './Upload';\nimport Tags from './Tags';\nimport { GALLERY_PROPS } from '../utils/actions';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\n\nconst Gallery = (props) => {\n    const [state, dispatch] = useUserContext();\n    const [worksState, setWorksState] = useState({ works: [] });\n    // const [post, setPost] = useState({});\n    const pathId = window.location.pathname.split('/')\n\n    console.log('worksState', worksState)\n    console.log('props', props)\n\n    useEffect(() => {\n        // console.log('props', props._id)\n        API.getUser(pathId[1])\n            .then(res => {\n                console.log('gallery get res', res.data)\n                setWorksState({\n                    works: res.data.works\n                });\n                dispatch({\n                    ...state,\n                    type: GALLERY_PROPS,\n                    username: res.data.username,\n                    _id: res.data._id,\n                    uploaded: false\n                })\n             })\n    }, [state.uploaded])\n\n    const handleDelete = (id) => {\n        API.deleteArt(id)\n        dispatch({\n            ...state,\n            uploaded: true\n        })\n    }\n    \n    const { works } = worksState;\n\n    const handlePostDetail = (id) => {\n        const postDetail = works.filter(post => {\n            if (post._id === id) {\n                return post;\n            }\n        })\n        console.log('detail click', postDetail[0])\n        const post = postDetail[0]\n        dispatch({\n            ...state,\n            postId: post._id,\n            postImg: post.img,\n            postTitle: post.title,\n            postDesc: post.description,\n            postTags: post.tags\n        })\n    }\n\n\n    // console.log(window.location)\n    \n\n    if (!works || !works.length) {\n        return (\n            <div className=\"gallery-box\">\n            <div className=\"profile\">\n                <h1>Welcome to Xfolio: {props.username}</h1>\n                <Upload />\n                <Link to={'blog'}>Blog Page</Link>\n            </div>\n            <div className=\"gallery\">\n                <h3>No posts yet!</h3>\n            </div>\n            </div>\n\n        )\n    } else {\n        return (\n\n          <div className=\"gallery-box\">\n                <div className =\"profile\">\n                    <h1>Welcome to Xfolio: {props.username}</h1>\n                <Upload />\n                <Link to={'blog'}>Blog Page</Link>\n                </div>\n                <div className=\"gallery\">\n                {works.map(post => (\n                    <div className=\"gall\" key={post._id}>\n                        <div className=\"gall-thumb\">\n                            <Link to={'gallery/work/' + post._id} onClick={() => handlePostDetail(post._id)}>\n                                <img src={post.img} alt={post.title} />\n                            </Link>\n                        </div>\n                       \n                        <div className=\"gall-info\">\n                        <div>\n                            <i>{post.title}</i>     \n                        </div>\n                        <div className=\"gall-descrip\">\n                            {post.description}\n                        </div>\n                            <div className=\"gall-tags\">\n                                {post.tags.map(tag => (\n                                    <span key={tag}><Tags works={worksState.works} tags={tag} /> </span>\n                                ))}\n                        </div> \n                        <div>\n                            <button className=\"del-butt\" onClick={() => handleDelete(post._id)}>\n                                <FontAwesomeIcon icon=\"trash\" />\n                            </button>\n                            <button className=\"edit-butt\">\n                                <FontAwesomeIcon icon=\"pencil-alt\" />\n                            </button>\n                        </div>\n                        </div>\n                    </div>\n\n                    ))}\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Gallery;","import React, { useEffect, useState } from 'react';\nimport API from '../utils/API';\n\nconst SinglePost = props => {\n\n    const [post, setPost] = useState();\n\n    console.log(props.match)\n\n    useEffect(() => {\n        API.getJournal(props.match.params.username)\n            .then(user => {\n                console.log('user res', user.data.journal)\n                const journal = user.data.journal.filter(post => {\n                    if (post._id === props.match.params.id)\n                        return post\n                })\n                console.log('filtered journal', journal[0])\n                setPost({\n                    _id: journal[0]._id,\n                    title: journal[0].title,\n                    body: journal[0].body,\n                    tags: journal[0].tags\n                })\n        })\n    }, [])\n\n    console.log('poststate', post)\n\n\n    return (\n        <div className=\"single-post\">\n            {post ? (\n                <div>\n                    <div className=\"post-title\">\n                        <h1>{post.title}</h1>\n                    </div>\n                    <div className=\"post-body\">\n                        <p>{post.body}</p>\n                    </div>\n                    <div className=\"post-tags\">{post.tags.map(tag => (\n                        <span key={tag}>{tag} </span>\n                    ))}\n                    </div>\n                </div>) : (<h3>Loading...</h3>)}\n           \n        </div>\n    )\n}\n\nexport default SinglePost;","import React, { useEffect } from 'react';\nimport { useUserContext } from '../utils/GlobalState';\n\nconst FilteredArt = props => {\n\n    // const [state, dispatch] = useUserContext;\n\n    console.log('props in FilteredArt', props.location.state.works)\n\n    // const toFilter = props.location.state.works;\n\n    // const filtered = toFilter.filter(post => {\n    //     console.log(post.tags)\n    //     post.tags.map(tag => )\n    //     if (post.tags === props.match.params.tag) {\n    //         return post\n    //     }\n    // })\n\n    const mapTags = props.location.state.works.map(post => {\n        return post.tags\n    })\n\n    \n    const tags = []\n    mapTags.filter(tag => {\n        for (let i = 0; i < tag.length; i++) {\n            if (tag[i] === props.match.params.tag) {\n                tags.push(tag)\n            }\n        }\n    })\n    \n    console.log('filtered tags', tags)\n\n    const posts = props.location.state.works.filter(post => {\n        console.log('post in posts filter', post)\n        for (let res of tags) {\n            if (post.tags === res) {\n                return post\n            }\n        }\n        \n    })\n\n    console.log(\"posts if they match???\", posts)\n    // console.log('state in FilteredArt', state)\n    // useEffect(() => {\n        \n    // }, [])\n\n    return (\n        <div>\n            <div>\n                <h1>All artworks tagged '{props.match.params.tag}'</h1>\n            </div>\n            <div>\n                {posts.map(post => (\n                    <div key={post._id}>\n                        <div>\n                            <h1>{post.title}</h1>\n                        </div>\n                        <div>\n                            <img src={post.img} alt={post.title} />\n                        </div>\n                        <div>\n                            {post.description}\n                        </div>\n                        <div>\n                            {post.tags}\n                        </div>\n                    </div>\n                ))}\n            </div>\n        </div>\n        \n    )\n}\n\nexport default FilteredArt;","import React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\nimport { UserProvider } from './utils/GlobalState'\nimport Container from './components/Container';\nimport Login from './components/Login';\nimport Signup from './components/Signup';\nimport ArtWork from './components/ArtWork';\nimport Blog from './components/Blog';\nimport Gallery from './components/Gallery'\nimport SinglePost from './components/SinglePost'\nimport FilteredArt from './components/FilteredArt'\nimport API from './utils/API';\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { faTrash, faPencilAlt } from '@fortawesome/free-solid-svg-icons'\n\nlibrary.add(faTrash, faPencilAlt);\n\n\nconst App = () => {  \n\n  const [isLoggedIn, setIsLoggedIn] = useState({\n    loggedIn: false,\n    username: '',\n    _id: ''\n  });\n\n  console.log('isLoggedIn state', isLoggedIn)\n\n  useEffect(() => {\n    API.status()\n      .then(res => {\n          console.log('res in App.js useEffect', res.data)\n          setIsLoggedIn({\n            loggedIn: true,\n            username: res.data.user[0].username,\n            _id: res.data.user[0]._id\n          });\n      })\n      .catch(e => {\n        console.log('error', e)\n      })\n  }, [])\n  \n  \n  const { loggedIn, username, _id } = isLoggedIn;\n  // if (loggedIn) {\n  //   return window.location.assign(`/${username}/gallery`)\n  // }\n  return (\n  <UserProvider>\n    <Router>\n      <Container loggedIn={loggedIn}>\n        <Switch>\n          <Route exact path='/' component={Login} />\n          <Route exact path='/login' component={Login} />\n          <Route exact path='/signup' component={Signup} />\n          <Route exact path='/:username/blog'>\n            <Blog loggedIn={loggedIn} username={username} _id={_id} />\n          </Route>\n          <Route exact path='/:username/blog/:id' component={SinglePost} />\n            <Route exact path='/:username/gallery/work/:id' component={ArtWork} />\n            <Route exact path='/:username/gallery/:tag' component={FilteredArt} />\n          <Route exact path='/:username/gallery'>\n            <Gallery loggedIn={loggedIn} username={username} />\n          </Route>\n        </Switch>\n      </Container>\n    </Router>\n  </UserProvider>\n  )\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}